{"version":3,"file":"js/348.5e5f3ea8.js","mappings":"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","sources":["webpack://home_nav/./src/views/LoginView.vue","webpack://home_nav/./src/components/navLogin.vue","webpack://home_nav/./node_modules/mdui/dist/js/mdui.esm.js","webpack://home_nav/./src/components/navLogin.vue?2d8c","webpack://home_nav/./src/views/LoginView.vue?5755"],"sourcesContent":["<template>\r\n    <div>\r\n<!--        Header-->\r\n        <div id=\"top\">\r\n            <div id=\"logo\">\r\n                <img class=\"logo\" :src=\"wData.logo\" alt=\"Logo\">\r\n                <h1 :style=\"{color: wData['LColor']}\">{{ wData.title }}</h1>\r\n            </div>\r\n        </div>\r\n\r\n<!--        Login-->\r\n        <nav-login />\r\n\r\n<!--        Footer-->\r\n        <div id=\"footer\">\r\n            网站信息\r\n            <div class=\"inline\" v-for=\"d in wData['text']\" :key=\"d\">\r\n                <div v-if=\"d['TextLink']\">\r\n                    &ensp;&ensp;|&ensp;&ensp;\r\n                    <a :href=\"d['TextLink']\" :style=\"{color: wData['FColor']}\">\r\n                        {{ d[\"Text\"] }}\r\n                    </a>\r\n                </div>\r\n                <div v-else>\r\n                    &ensp;&ensp;|&ensp;&ensp;\r\n                    <a :style=\"{color: wData['FColor']}\">\r\n                        {{ d[\"Text\"] }}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport navLogin from \"@/components/navLogin\";\r\n\r\nexport default {\r\n    name: \"LoginView\",\r\n    components: {\r\n        navLogin,\r\n    },\r\n    computed: {\r\n        // 配置数据\r\n        wData(){\r\n            return this.$store.state.LoginConfig\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#footer {\r\n    text-align: center;\r\n    margin-top: 420px;\r\n    font-family: MyriadSetPro-Thin;\r\n}\r\n#footer div {\r\n    display: inline;\r\n}\r\n.inline {\r\n    display: inline;\r\n}\r\n#top {\r\n    margin-top: 6.18%;\r\n    width: 100%;\r\n    height: 162px\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"box\">\r\n        <form v-on:submit.prevent=\"submitForm\">\r\n            <div class=\"mdui-textfield mdui-textfield-floating-label\">\r\n                <i class=\"mdui-icon material-icons\">lock</i>\r\n                <label class=\"mdui-textfield-label\">密码</label>\r\n                <input class=\"mdui-textfield-input\" type=\"password\" id=\"password\" name=\"password\" v-model=\"form.password\"/>\r\n            </div>\r\n            <div style=\"text-align: center; padding-top: 20px;\">\r\n                <button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-blue-50\" style=\"width: 200px;\" id=\"LoginBtn\">登录</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport mdui from \"mdui\";\r\n\r\nexport default {\r\n    name: \"navLogin\",\r\n    data(){\r\n      return {\r\n          form: {\r\n              password: ''\r\n          }\r\n      }\r\n    },\r\n    methods: {\r\n        submitForm() {\r\n            axios.post('/url/api/login', this.form)\r\n                .then((res) => {\r\n                    //Perform Success Action\r\n                    if (res.data.code === 2001) {\r\n                        mdui.snackbar({\r\n                            message: '服务繁忙',\r\n                            position: 'right-top',\r\n                        });\r\n                    } else if (res.data.code === 2006) {\r\n                        mdui.snackbar({\r\n                            message: '密码错误',\r\n                            position: 'right-top',\r\n                        });\r\n                    }else if (res.data.code === 1000) {\r\n                        // 密码正确\r\n                        localStorage.setItem(\"Bearer\", res.data.data.Token)\r\n                        this.$store.dispatch(\"tChangeData\")\r\n                        // this.$router.push({path: '/'})\r\n                        window.open(\"/\", \"_self\")\r\n                    }\r\n                }).catch((error) => {\r\n                    // error.response.status Check status code\r\n                    mdui.snackbar({\r\n                        message: error,\r\n                        position: 'right-top',\r\n                    });\r\n                });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","/*!\n * mdui 1.0.2 (https://mdui.org)\n * Copyright 2016-2021 zdhxiong\n * Licensed under MIT\n */\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isUndefined(target) {\n    return typeof target === 'undefined';\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isWindow(target) {\n    return target instanceof Window;\n}\nfunction isDocument(target) {\n    return target instanceof Document;\n}\nfunction isElement(target) {\n    return target instanceof Element;\n}\nfunction isNode(target) {\n    return target instanceof Node;\n}\n/**\n * 是否是 IE 浏览器\n */\nfunction isIE() {\n    // @ts-ignore\n    return !!window.document.documentMode;\n}\nfunction isArrayLike(target) {\n    if (isFunction(target) || isWindow(target)) {\n        return false;\n    }\n    return isNumber(target.length);\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction toElement(target) {\n    return isDocument(target) ? target.documentElement : target;\n}\n/**\n * 把用 - 分隔的字符串转为驼峰（如 box-sizing 转换为 boxSizing）\n * @param string\n */\nfunction toCamelCase(string) {\n    return string\n        .replace(/^-ms-/, 'ms-')\n        .replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n}\n/**\n * 把驼峰法转为用 - 分隔的字符串（如 boxSizing 转换为 box-sizing）\n * @param string\n */\nfunction toKebabCase(string) {\n    return string.replace(/[A-Z]/g, (replacer) => '-' + replacer.toLowerCase());\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n */\nfunction getComputedStyleValue(element, name) {\n    return window.getComputedStyle(element).getPropertyValue(toKebabCase(name));\n}\n/**\n * 检查元素的 box-sizing 是否是 border-box\n * @param element\n */\nfunction isBorderBox(element) {\n    return getComputedStyleValue(element, 'box-sizing') === 'border-box';\n}\n/**\n * 获取元素的 padding, border, margin 宽度（两侧宽度的和，单位为px）\n * @param element\n * @param direction\n * @param extra\n */\nfunction getExtraWidth(element, direction, extra) {\n    const position = direction === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n    return [0, 1].reduce((prev, _, index) => {\n        let prop = extra + position[index];\n        if (extra === 'border') {\n            prop += 'Width';\n        }\n        return prev + parseFloat(getComputedStyleValue(element, prop) || '0');\n    }, 0);\n}\n/**\n * 获取元素的样式值，对 width 和 height 进行过处理\n * @param element\n * @param name\n */\nfunction getStyle(element, name) {\n    // width、height 属性使用 getComputedStyle 得到的值不准确，需要使用 getBoundingClientRect 获取\n    if (name === 'width' || name === 'height') {\n        const valueNumber = element.getBoundingClientRect()[name];\n        if (isBorderBox(element)) {\n            return `${valueNumber}px`;\n        }\n        return `${valueNumber -\n            getExtraWidth(element, name, 'border') -\n            getExtraWidth(element, name, 'padding')}px`;\n    }\n    return getComputedStyleValue(element, name);\n}\n/**\n * 获取子节点组成的数组\n * @param target\n * @param parent\n */\nfunction getChildNodesArray(target, parent) {\n    const tempParent = document.createElement(parent);\n    tempParent.innerHTML = target;\n    return [].slice.call(tempParent.childNodes);\n}\n/**\n * 始终返回 false 的函数\n */\nfunction returnFalse() {\n    return false;\n}\n/**\n * 数值单位的 CSS 属性\n */\nconst cssNumber = [\n    'animationIterationCount',\n    'columnCount',\n    'fillOpacity',\n    'flexGrow',\n    'flexShrink',\n    'fontWeight',\n    'gridArea',\n    'gridColumn',\n    'gridColumnEnd',\n    'gridColumnStart',\n    'gridRow',\n    'gridRowEnd',\n    'gridRowStart',\n    'lineHeight',\n    'opacity',\n    'order',\n    'orphans',\n    'widows',\n    'zIndex',\n    'zoom',\n];\n\nfunction each(target, callback) {\n    if (isArrayLike(target)) {\n        for (let i = 0; i < target.length; i += 1) {\n            if (callback.call(target[i], i, target[i]) === false) {\n                return target;\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(target);\n        for (let i = 0; i < keys.length; i += 1) {\n            if (callback.call(target[keys[i]], keys[i], target[keys[i]]) === false) {\n                return target;\n            }\n        }\n    }\n    return target;\n}\n\n/**\n * 为了使用模块扩充，这里不能使用默认导出\n */\nclass JQ {\n    constructor(arr) {\n        this.length = 0;\n        if (!arr) {\n            return this;\n        }\n        each(arr, (i, item) => {\n            // @ts-ignore\n            this[i] = item;\n        });\n        this.length = arr.length;\n        return this;\n    }\n}\n\nfunction get$() {\n    const $ = function (selector) {\n        if (!selector) {\n            return new JQ();\n        }\n        // JQ\n        if (selector instanceof JQ) {\n            return selector;\n        }\n        // function\n        if (isFunction(selector)) {\n            if (/complete|loaded|interactive/.test(document.readyState) &&\n                document.body) {\n                selector.call(document, $);\n            }\n            else {\n                document.addEventListener('DOMContentLoaded', () => selector.call(document, $), false);\n            }\n            return new JQ([document]);\n        }\n        // String\n        if (isString(selector)) {\n            const html = selector.trim();\n            // 根据 HTML 字符串创建 JQ 对象\n            if (html[0] === '<' && html[html.length - 1] === '>') {\n                let toCreate = 'div';\n                const tags = {\n                    li: 'ul',\n                    tr: 'tbody',\n                    td: 'tr',\n                    th: 'tr',\n                    tbody: 'table',\n                    option: 'select',\n                };\n                each(tags, (childTag, parentTag) => {\n                    if (html.indexOf(`<${childTag}`) === 0) {\n                        toCreate = parentTag;\n                        return false;\n                    }\n                    return;\n                });\n                return new JQ(getChildNodesArray(html, toCreate));\n            }\n            // 根据 CSS 选择器创建 JQ 对象\n            const isIdSelector = selector[0] === '#' && !selector.match(/[ .<>:~]/);\n            if (!isIdSelector) {\n                return new JQ(document.querySelectorAll(selector));\n            }\n            const element = document.getElementById(selector.slice(1));\n            if (element) {\n                return new JQ([element]);\n            }\n            return new JQ();\n        }\n        if (isArrayLike(selector) && !isNode(selector)) {\n            return new JQ(selector);\n        }\n        return new JQ([selector]);\n    };\n    $.fn = JQ.prototype;\n    return $;\n}\nconst $ = get$();\n\n// 避免页面加载完后直接执行css动画\n// https://css-tricks.com/transitions-only-after-page-load/\nsetTimeout(() => $('body').addClass('mdui-loaded'));\nconst mdui = {\n    $: $,\n};\n\n$.fn.each = function (callback) {\n    return each(this, callback);\n};\n\n/**\n * 检查 container 元素内是否包含 contains 元素\n * @param container 父元素\n * @param contains 子元素\n * @example\n```js\ncontains( document, document.body ); // true\ncontains( document.getElementById('test'), document ); // false\ncontains( $('.container').get(0), $('.contains').get(0) ); // false\n```\n */\nfunction contains(container, contains) {\n    return container !== contains && toElement(container).contains(contains);\n}\n\n/**\n * 把第二个数组的元素追加到第一个数组中，并返回合并后的数组\n * @param first 第一个数组\n * @param second 该数组的元素将被追加到第一个数组中\n * @example\n```js\nmerge( [ 0, 1, 2 ], [ 2, 3, 4 ] )\n// [ 0, 1, 2, 2, 3, 4 ]\n```\n */\nfunction merge(first, second) {\n    each(second, (_, value) => {\n        first.push(value);\n    });\n    return first;\n}\n\n$.fn.get = function (index) {\n    return index === undefined\n        ? [].slice.call(this)\n        : this[index >= 0 ? index : index + this.length];\n};\n\n$.fn.find = function (selector) {\n    const foundElements = [];\n    this.each((_, element) => {\n        merge(foundElements, $(element.querySelectorAll(selector)).get());\n    });\n    return new JQ(foundElements);\n};\n\n// 存储事件\nconst handlers = {};\n// 元素ID\nlet mduiElementId = 1;\n/**\n * 为元素赋予一个唯一的ID\n */\nfunction getElementId(element) {\n    const key = '_mduiEventId';\n    // @ts-ignore\n    if (!element[key]) {\n        // @ts-ignore\n        element[key] = ++mduiElementId;\n    }\n    // @ts-ignore\n    return element[key];\n}\n/**\n * 解析事件名中的命名空间\n */\nfunction parse(type) {\n    const parts = type.split('.');\n    return {\n        type: parts[0],\n        ns: parts.slice(1).sort().join(' '),\n    };\n}\n/**\n * 命名空间匹配规则\n */\nfunction matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)');\n}\n/**\n * 获取匹配的事件\n * @param element\n * @param type\n * @param func\n * @param selector\n */\nfunction getHandlers(element, type, func, selector) {\n    const event = parse(type);\n    return (handlers[getElementId(element)] || []).filter((handler) => handler &&\n        (!event.type || handler.type === event.type) &&\n        (!event.ns || matcherFor(event.ns).test(handler.ns)) &&\n        (!func || getElementId(handler.func) === getElementId(func)) &&\n        (!selector || handler.selector === selector));\n}\n/**\n * 添加事件监听\n * @param element\n * @param types\n * @param func\n * @param data\n * @param selector\n */\nfunction add(element, types, func, data, selector) {\n    const elementId = getElementId(element);\n    if (!handlers[elementId]) {\n        handlers[elementId] = [];\n    }\n    // 传入 data.useCapture 来设置 useCapture: true\n    let useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n        useCapture = true;\n    }\n    types.split(' ').forEach((type) => {\n        if (!type) {\n            return;\n        }\n        const event = parse(type);\n        function callFn(e, elem) {\n            // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n            const result = func.apply(elem, \n            // @ts-ignore\n            e._detail === undefined ? [e] : [e].concat(e._detail));\n            if (result === false) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n        function proxyFn(e) {\n            // @ts-ignore\n            if (e._ns && !matcherFor(e._ns).test(event.ns)) {\n                return;\n            }\n            // @ts-ignore\n            e._data = data;\n            if (selector) {\n                // 事件代理\n                $(element)\n                    .find(selector)\n                    .get()\n                    .reverse()\n                    .forEach((elem) => {\n                    if (elem === e.target ||\n                        contains(elem, e.target)) {\n                        callFn(e, elem);\n                    }\n                });\n            }\n            else {\n                // 不使用事件代理\n                callFn(e, element);\n            }\n        }\n        const handler = {\n            type: event.type,\n            ns: event.ns,\n            func,\n            selector,\n            id: handlers[elementId].length,\n            proxy: proxyFn,\n        };\n        handlers[elementId].push(handler);\n        element.addEventListener(handler.type, proxyFn, useCapture);\n    });\n}\n/**\n * 移除事件监听\n * @param element\n * @param types\n * @param func\n * @param selector\n */\nfunction remove(element, types, func, selector) {\n    const handlersInElement = handlers[getElementId(element)] || [];\n    const removeEvent = (handler) => {\n        delete handlersInElement[handler.id];\n        element.removeEventListener(handler.type, handler.proxy, false);\n    };\n    if (!types) {\n        handlersInElement.forEach((handler) => removeEvent(handler));\n    }\n    else {\n        types.split(' ').forEach((type) => {\n            if (type) {\n                getHandlers(element, type, func, selector).forEach((handler) => removeEvent(handler));\n            }\n        });\n    }\n}\n\n$.fn.trigger = function (type, extraParameters) {\n    const event = parse(type);\n    let eventObject;\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n    };\n    const isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(event.type) > -1;\n    if (isMouseEvent) {\n        // Note: MouseEvent 无法传入 detail 参数\n        eventObject = new MouseEvent(event.type, eventParams);\n    }\n    else {\n        eventParams.detail = extraParameters;\n        eventObject = new CustomEvent(event.type, eventParams);\n    }\n    // @ts-ignore\n    eventObject._detail = extraParameters;\n    // @ts-ignore\n    eventObject._ns = event.ns;\n    return this.each(function () {\n        this.dispatchEvent(eventObject);\n    });\n};\n\nfunction extend(target, object1, ...objectN) {\n    objectN.unshift(object1);\n    each(objectN, (_, object) => {\n        each(object, (prop, value) => {\n            if (!isUndefined(value)) {\n                target[prop] = value;\n            }\n        });\n    });\n    return target;\n}\n\n/**\n * 将数组或对象序列化，序列化后的字符串可作为 URL 查询字符串使用\n *\n * 若传入数组，则格式必须和 serializeArray 方法的返回值一样\n * @param obj 对象或数组\n * @example\n```js\nparam({ width: 1680, height: 1050 });\n// width=1680&height=1050\n```\n * @example\n```js\nparam({ foo: { one: 1, two: 2 }})\n// foo[one]=1&foo[two]=2\n```\n * @example\n```js\nparam({ids: [1, 2, 3]})\n// ids[]=1&ids[]=2&ids[]=3\n```\n * @example\n```js\nparam([\n  {\"name\":\"name\",\"value\":\"mdui\"},\n  {\"name\":\"password\",\"value\":\"123456\"}\n])\n// name=mdui&password=123456\n```\n */\nfunction param(obj) {\n    if (!isObjectLike(obj) && !Array.isArray(obj)) {\n        return '';\n    }\n    const args = [];\n    function destructure(key, value) {\n        let keyTmp;\n        if (isObjectLike(value)) {\n            each(value, (i, v) => {\n                if (Array.isArray(value) && !isObjectLike(v)) {\n                    keyTmp = '';\n                }\n                else {\n                    keyTmp = i;\n                }\n                destructure(`${key}[${keyTmp}]`, v);\n            });\n        }\n        else {\n            if (value == null || value === '') {\n                keyTmp = '=';\n            }\n            else {\n                keyTmp = `=${encodeURIComponent(value)}`;\n            }\n            args.push(encodeURIComponent(key) + keyTmp);\n        }\n    }\n    if (Array.isArray(obj)) {\n        each(obj, function () {\n            destructure(this.name, this.value);\n        });\n    }\n    else {\n        each(obj, destructure);\n    }\n    return args.join('&');\n}\n\n// 全局配置参数\nconst globalOptions = {};\n// 全局事件名\nconst ajaxEvents = {\n    ajaxStart: 'start.mdui.ajax',\n    ajaxSuccess: 'success.mdui.ajax',\n    ajaxError: 'error.mdui.ajax',\n    ajaxComplete: 'complete.mdui.ajax',\n};\n\n/**\n * 判断此请求方法是否通过查询字符串提交参数\n * @param method 请求方法，大写\n */\nfunction isQueryStringData(method) {\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\n}\n/**\n * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n * @param url\n * @param query\n */\nfunction appendQuery(url, query) {\n    return `${url}&${query}`.replace(/[&?]{1,2}/, '?');\n}\n/**\n * 合并请求参数，参数优先级：options > globalOptions > defaults\n * @param options\n */\nfunction mergeOptions(options) {\n    // 默认参数\n    const defaults = {\n        url: '',\n        method: 'GET',\n        data: '',\n        processData: true,\n        async: true,\n        cache: true,\n        username: '',\n        password: '',\n        headers: {},\n        xhrFields: {},\n        statusCode: {},\n        dataType: 'text',\n        contentType: 'application/x-www-form-urlencoded',\n        timeout: 0,\n        global: true,\n    };\n    // globalOptions 中的回调函数不合并\n    each(globalOptions, (key, value) => {\n        const callbacks = [\n            'beforeSend',\n            'success',\n            'error',\n            'complete',\n            'statusCode',\n        ];\n        // @ts-ignore\n        if (callbacks.indexOf(key) < 0 && !isUndefined(value)) {\n            defaults[key] = value;\n        }\n    });\n    return extend({}, defaults, options);\n}\n/**\n * 发送 ajax 请求\n * @param options\n * @example\n```js\najax({\n  method: \"POST\",\n  url: \"some.php\",\n  data: { name: \"John\", location: \"Boston\" }\n}).then(function( msg ) {\n  alert( \"Data Saved: \" + msg );\n});\n```\n */\nfunction ajax(options) {\n    // 是否已取消请求\n    let isCanceled = false;\n    // 事件参数\n    const eventParams = {};\n    // 参数合并\n    const mergedOptions = mergeOptions(options);\n    let url = mergedOptions.url || window.location.toString();\n    const method = mergedOptions.method.toUpperCase();\n    let data = mergedOptions.data;\n    const processData = mergedOptions.processData;\n    const async = mergedOptions.async;\n    const cache = mergedOptions.cache;\n    const username = mergedOptions.username;\n    const password = mergedOptions.password;\n    const headers = mergedOptions.headers;\n    const xhrFields = mergedOptions.xhrFields;\n    const statusCode = mergedOptions.statusCode;\n    const dataType = mergedOptions.dataType;\n    const contentType = mergedOptions.contentType;\n    const timeout = mergedOptions.timeout;\n    const global = mergedOptions.global;\n    // 需要发送的数据\n    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n    if (data &&\n        (isQueryStringData(method) || processData) &&\n        !isString(data) &&\n        !(data instanceof ArrayBuffer) &&\n        !(data instanceof Blob) &&\n        !(data instanceof Document) &&\n        !(data instanceof FormData)) {\n        data = param(data);\n    }\n    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n    if (data && isQueryStringData(method)) {\n        // 查询字符串拼接到 URL 中\n        url = appendQuery(url, data);\n        data = null;\n    }\n    /**\n     * 触发事件和回调函数\n     * @param event\n     * @param params\n     * @param callback\n     * @param args\n     */\n    function trigger(event, params, callback, ...args) {\n        // 触发全局事件\n        if (global) {\n            $(document).trigger(event, params);\n        }\n        // 触发 ajax 回调和事件\n        let result1;\n        let result2;\n        if (callback) {\n            // 全局回调\n            if (callback in globalOptions) {\n                // @ts-ignore\n                result1 = globalOptions[callback](...args);\n            }\n            // 自定义回调\n            if (mergedOptions[callback]) {\n                // @ts-ignore\n                result2 = mergedOptions[callback](...args);\n            }\n            // beforeSend 回调返回 false 时取消 ajax 请求\n            if (callback === 'beforeSend' &&\n                (result1 === false || result2 === false)) {\n                isCanceled = true;\n            }\n        }\n    }\n    // XMLHttpRequest 请求\n    function XHR() {\n        let textStatus;\n        return new Promise((resolve, reject) => {\n            // GET/HEAD 请求的缓存处理\n            if (isQueryStringData(method) && !cache) {\n                url = appendQuery(url, `_=${Date.now()}`);\n            }\n            // 创建 XHR\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, async, username, password);\n            if (contentType ||\n                (data && !isQueryStringData(method) && contentType !== false)) {\n                xhr.setRequestHeader('Content-Type', contentType);\n            }\n            // 设置 Accept\n            if (dataType === 'json') {\n                xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n            }\n            // 添加 headers\n            if (headers) {\n                each(headers, (key, value) => {\n                    // undefined 值不发送，string 和 null 需要发送\n                    if (!isUndefined(value)) {\n                        xhr.setRequestHeader(key, value + ''); // 把 null 转换成字符串\n                    }\n                });\n            }\n            // 检查是否是跨域请求，跨域请求时不添加 X-Requested-With\n            const crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(url) &&\n                RegExp.$2 !== window.location.host;\n            if (!crossDomain) {\n                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n            }\n            if (xhrFields) {\n                each(xhrFields, (key, value) => {\n                    // @ts-ignore\n                    xhr[key] = value;\n                });\n            }\n            eventParams.xhr = xhr;\n            eventParams.options = mergedOptions;\n            let xhrTimeout;\n            xhr.onload = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                // AJAX 返回的 HTTP 响应码是否表示成功\n                const isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) ||\n                    xhr.status === 304 ||\n                    xhr.status === 0;\n                let responseData;\n                if (isHttpStatusSuccess) {\n                    if (xhr.status === 204 || method === 'HEAD') {\n                        textStatus = 'nocontent';\n                    }\n                    else if (xhr.status === 304) {\n                        textStatus = 'notmodified';\n                    }\n                    else {\n                        textStatus = 'success';\n                    }\n                    if (dataType === 'json') {\n                        try {\n                            responseData =\n                                method === 'HEAD' ? undefined : JSON.parse(xhr.responseText);\n                            eventParams.data = responseData;\n                        }\n                        catch (err) {\n                            textStatus = 'parsererror';\n                            trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                            reject(new Error(textStatus));\n                        }\n                        if (textStatus !== 'parsererror') {\n                            trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                            resolve(responseData);\n                        }\n                    }\n                    else {\n                        responseData =\n                            method === 'HEAD'\n                                ? undefined\n                                : xhr.responseType === 'text' || xhr.responseType === ''\n                                    ? xhr.responseText\n                                    : xhr.response;\n                        eventParams.data = responseData;\n                        trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                        resolve(responseData);\n                    }\n                }\n                else {\n                    textStatus = 'error';\n                    trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                    reject(new Error(textStatus));\n                }\n                // statusCode\n                each([globalOptions.statusCode, statusCode], (_, func) => {\n                    if (func && func[xhr.status]) {\n                        if (isHttpStatusSuccess) {\n                            func[xhr.status](responseData, textStatus, xhr);\n                        }\n                        else {\n                            func[xhr.status](xhr, textStatus);\n                        }\n                    }\n                });\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, textStatus);\n            };\n            xhr.onerror = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, xhr.statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, 'error');\n                reject(new Error(xhr.statusText));\n            };\n            xhr.onabort = function () {\n                let statusText = 'abort';\n                if (xhrTimeout) {\n                    statusText = 'timeout';\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, statusText);\n                reject(new Error(statusText));\n            };\n            // ajax start 回调\n            trigger(ajaxEvents.ajaxStart, eventParams, 'beforeSend', xhr);\n            if (isCanceled) {\n                reject(new Error('cancel'));\n                return;\n            }\n            // Timeout\n            if (timeout > 0) {\n                xhrTimeout = setTimeout(() => {\n                    xhr.abort();\n                }, timeout);\n            }\n            // 发送 XHR\n            xhr.send(data);\n        });\n    }\n    return XHR();\n}\n\n$.ajax = ajax;\n\n/**\n * 为 Ajax 请求设置全局配置参数\n * @param options 键值对参数\n * @example\n```js\najaxSetup({\n  dataType: 'json',\n  method: 'POST',\n});\n```\n */\nfunction ajaxSetup(options) {\n    return extend(globalOptions, options);\n}\n\n$.ajaxSetup = ajaxSetup;\n\n$.contains = contains;\n\nconst dataNS = '_mduiElementDataStorage';\n\n/**\n * 在元素上设置键值对数据\n * @param element\n * @param object\n */\nfunction setObjectToElement(element, object) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        // @ts-ignore\n        element[dataNS] = {};\n    }\n    each(object, (key, value) => {\n        // @ts-ignore\n        element[dataNS][toCamelCase(key)] = value;\n    });\n}\nfunction data(element, key, value) {\n    // 根据键值对设置值\n    // data(element, { 'key' : 'value' })\n    if (isObjectLike(key)) {\n        setObjectToElement(element, key);\n        return key;\n    }\n    // 根据 key、value 设置值\n    // data(element, 'key', 'value')\n    if (!isUndefined(value)) {\n        setObjectToElement(element, { [key]: value });\n        return value;\n    }\n    // 获取所有值\n    // data(element)\n    if (isUndefined(key)) {\n        // @ts-ignore\n        return element[dataNS] ? element[dataNS] : {};\n    }\n    // 从 dataNS 中获取指定值\n    // data(element, 'key')\n    key = toCamelCase(key);\n    // @ts-ignore\n    if (element[dataNS] && key in element[dataNS]) {\n        // @ts-ignore\n        return element[dataNS][key];\n    }\n    return undefined;\n}\n\n$.data = data;\n\n$.each = each;\n\n$.extend = function (...objectN) {\n    if (objectN.length === 1) {\n        each(objectN[0], (prop, value) => {\n            this[prop] = value;\n        });\n        return this;\n    }\n    return extend(objectN.shift(), objectN.shift(), ...objectN);\n};\n\nfunction map(elements, callback) {\n    let value;\n    const ret = [];\n    each(elements, (i, element) => {\n        value = callback.call(window, element, i);\n        if (value != null) {\n            ret.push(value);\n        }\n    });\n    return [].concat(...ret);\n}\n\n$.map = map;\n\n$.merge = merge;\n\n$.param = param;\n\n/**\n * 移除指定元素上存放的数据\n * @param element 存放数据的元素\n * @param name\n * 数据键名\n *\n * 若未指定键名，将移除元素上所有数据\n *\n * 多个键名可以用空格分隔，或者用数组表示多个键名\n  @example\n```js\n// 移除元素上键名为 name 的数据\nremoveData(document.body, 'name');\n```\n * @example\n```js\n// 移除元素上键名为 name1 和 name2 的数据\nremoveData(document.body, 'name1 name2');\n```\n * @example\n```js\n// 移除元素上键名为 name1 和 name2 的数据\nremoveData(document.body, ['name1', 'name2']);\n```\n * @example\n```js\n// 移除元素上所有数据\nremoveData(document.body);\n```\n */\nfunction removeData(element, name) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        return;\n    }\n    const remove = (nameItem) => {\n        nameItem = toCamelCase(nameItem);\n        // @ts-ignore\n        if (element[dataNS][nameItem]) {\n            // @ts-ignore\n            element[dataNS][nameItem] = null;\n            // @ts-ignore\n            delete element[dataNS][nameItem];\n        }\n    };\n    if (isUndefined(name)) {\n        // @ts-ignore\n        element[dataNS] = null;\n        // @ts-ignore\n        delete element[dataNS];\n        // @ts-ignore\n    }\n    else if (isString(name)) {\n        name\n            .split(' ')\n            .filter((nameItem) => nameItem)\n            .forEach((nameItem) => remove(nameItem));\n    }\n    else {\n        each(name, (_, nameItem) => remove(nameItem));\n    }\n}\n\n$.removeData = removeData;\n\n/**\n * 过滤掉数组中的重复元素\n * @param arr 数组\n * @example\n```js\nunique([1, 2, 12, 3, 2, 1, 2, 1, 1]);\n// [1, 2, 12, 3]\n```\n */\nfunction unique(arr) {\n    const result = [];\n    each(arr, (_, val) => {\n        if (result.indexOf(val) === -1) {\n            result.push(val);\n        }\n    });\n    return result;\n}\n\n$.unique = unique;\n\n$.fn.add = function (selector) {\n    return new JQ(unique(merge(this.get(), $(selector).get())));\n};\n\neach(['add', 'remove', 'toggle'], (_, name) => {\n    $.fn[`${name}Class`] = function (className) {\n        if (name === 'remove' && !arguments.length) {\n            return this.each((_, element) => {\n                element.setAttribute('class', '');\n            });\n        }\n        return this.each((i, element) => {\n            if (!isElement(element)) {\n                return;\n            }\n            const classes = (isFunction(className)\n                ? className.call(element, i, element.getAttribute('class') || '')\n                : className)\n                .split(' ')\n                .filter((name) => name);\n            each(classes, (_, cls) => {\n                element.classList[name](cls);\n            });\n        });\n    };\n});\n\neach(['insertBefore', 'insertAfter'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const $element = nameIndex ? $(this.get().reverse()) : this; // 顺序和 jQuery 保持一致\n        const $target = $(target);\n        const result = [];\n        $target.each((index, target) => {\n            if (!target.parentNode) {\n                return;\n            }\n            $element.each((_, element) => {\n                const newItem = index\n                    ? element.cloneNode(true)\n                    : element;\n                const existingItem = nameIndex ? target.nextSibling : target;\n                result.push(newItem);\n                target.parentNode.insertBefore(newItem, existingItem);\n            });\n        });\n        return $(nameIndex ? result.reverse() : result);\n    };\n});\n\n/**\n * 是否不是 HTML 字符串（包裹在 <> 中）\n * @param target\n */\nfunction isPlainText(target) {\n    return (isString(target) && (target[0] !== '<' || target[target.length - 1] !== '>'));\n}\neach(['before', 'after'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        // after 方法，多个参数需要按参数顺序添加到元素后面，所以需要将参数顺序反向处理\n        if (nameIndex === 1) {\n            args = args.reverse();\n        }\n        return this.each((index, element) => {\n            const targets = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            each(targets, (_, target) => {\n                let $target;\n                if (isPlainText(target)) {\n                    $target = $(getChildNodesArray(target, 'div'));\n                }\n                else if (index && isElement(target)) {\n                    $target = $(target.cloneNode(true));\n                }\n                else {\n                    $target = $(target);\n                }\n                $target[nameIndex ? 'insertAfter' : 'insertBefore'](element);\n            });\n        });\n    };\n});\n\n$.fn.off = function (types, selector, callback) {\n    // types 是对象\n    if (isObjectLike(types)) {\n        each(types, (type, fn) => {\n            // this.off('click', undefined, function () {})\n            // this.off('click', '.box', function () {})\n            this.off(type, selector, fn);\n        });\n        return this;\n    }\n    // selector 不存在\n    if (selector === false || isFunction(selector)) {\n        callback = selector;\n        selector = undefined;\n        // this.off('click', undefined, function () {})\n    }\n    // callback 传入 `false`，相当于 `return false`\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    return this.each(function () {\n        remove(this, types, callback, selector);\n    });\n};\n\n$.fn.on = function (types, selector, data, callback, one) {\n    // types 可以是 type/func 对象\n    if (isObjectLike(types)) {\n        // (types-Object, selector, data)\n        if (!isString(selector)) {\n            // (types-Object, data)\n            data = data || selector;\n            selector = undefined;\n        }\n        each(types, (type, fn) => {\n            // selector 和 data 都可能是 undefined\n            // @ts-ignore\n            this.on(type, selector, data, fn, one);\n        });\n        return this;\n    }\n    if (data == null && callback == null) {\n        // (types, fn)\n        callback = selector;\n        data = selector = undefined;\n    }\n    else if (callback == null) {\n        if (isString(selector)) {\n            // (types, selector, fn)\n            callback = data;\n            data = undefined;\n        }\n        else {\n            // (types, data, fn)\n            callback = data;\n            data = selector;\n            selector = undefined;\n        }\n    }\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    else if (!callback) {\n        return this;\n    }\n    // $().one()\n    if (one) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const _this = this;\n        const origCallback = callback;\n        callback = function (event) {\n            _this.off(event.type, selector, callback);\n            // eslint-disable-next-line prefer-rest-params\n            return origCallback.apply(this, arguments);\n        };\n    }\n    return this.each(function () {\n        add(this, types, callback, data, selector);\n    });\n};\n\neach(ajaxEvents, (name, eventName) => {\n    $.fn[name] = function (fn) {\n        return this.on(eventName, (e, params) => {\n            fn(e, params.xhr, params.options, params.data);\n        });\n    };\n});\n\n$.fn.map = function (callback) {\n    return new JQ(map(this, (element, i) => callback.call(element, i, element)));\n};\n\n$.fn.clone = function () {\n    return this.map(function () {\n        return this.cloneNode(true);\n    });\n};\n\n$.fn.is = function (selector) {\n    let isMatched = false;\n    if (isFunction(selector)) {\n        this.each((index, element) => {\n            if (selector.call(element, index, element)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    if (isString(selector)) {\n        this.each((_, element) => {\n            if (isDocument(element) || isWindow(element)) {\n                return;\n            }\n            // @ts-ignore\n            const matches = element.matches || element.msMatchesSelector;\n            if (matches.call(element, selector)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    const $compareWith = $(selector);\n    this.each((_, element) => {\n        $compareWith.each((_, compare) => {\n            if (element === compare) {\n                isMatched = true;\n            }\n        });\n    });\n    return isMatched;\n};\n\n$.fn.remove = function (selector) {\n    return this.each((_, element) => {\n        if (element.parentNode && (!selector || $(element).is(selector))) {\n            element.parentNode.removeChild(element);\n        }\n    });\n};\n\neach(['prepend', 'append'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        return this.each((index, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            const child = childLength\n                ? childNodes[nameIndex ? childLength - 1 : 0]\n                : document.createElement('div');\n            if (!childLength) {\n                element.appendChild(child);\n            }\n            let contents = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            // 如果不是字符串，则仅第一个元素使用原始元素，其他的都克隆自第一个元素\n            if (index) {\n                contents = contents.map((content) => {\n                    return isString(content) ? content : $(content).clone();\n                });\n            }\n            $(child)[nameIndex ? 'after' : 'before'](...contents);\n            if (!childLength) {\n                element.removeChild(child);\n            }\n        });\n    };\n});\n\neach(['appendTo', 'prependTo'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const extraChilds = [];\n        const $target = $(target).map((_, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            if (childLength) {\n                return childNodes[nameIndex ? 0 : childLength - 1];\n            }\n            const child = document.createElement('div');\n            element.appendChild(child);\n            extraChilds.push(child);\n            return child;\n        });\n        const $result = this[nameIndex ? 'insertBefore' : 'insertAfter']($target);\n        $(extraChilds).remove();\n        return $result;\n    };\n});\n\neach(['attr', 'prop', 'css'], (nameIndex, name) => {\n    function set(element, key, value) {\n        // 值为 undefined 时，不修改\n        if (isUndefined(value)) {\n            return;\n        }\n        switch (nameIndex) {\n            // attr\n            case 0:\n                if (isNull(value)) {\n                    element.removeAttribute(key);\n                }\n                else {\n                    element.setAttribute(key, value);\n                }\n                break;\n            // prop\n            case 1:\n                // @ts-ignore\n                element[key] = value;\n                break;\n            // css\n            default:\n                key = toCamelCase(key);\n                // @ts-ignore\n                element.style[key] = isNumber(value)\n                    ? `${value}${cssNumber.indexOf(key) > -1 ? '' : 'px'}`\n                    : value;\n                break;\n        }\n    }\n    function get(element, key) {\n        switch (nameIndex) {\n            // attr\n            case 0:\n                // 属性不存在时，原生 getAttribute 方法返回 null，而 jquery 返回 undefined。这里和 jquery 保持一致\n                const value = element.getAttribute(key);\n                return isNull(value) ? undefined : value;\n            // prop\n            case 1:\n                // @ts-ignore\n                return element[key];\n            // css\n            default:\n                return getStyle(element, key);\n        }\n    }\n    $.fn[name] = function (key, value) {\n        if (isObjectLike(key)) {\n            each(key, (k, v) => {\n                // @ts-ignore\n                this[name](k, v);\n            });\n            return this;\n        }\n        if (arguments.length === 1) {\n            const element = this[0];\n            return isElement(element) ? get(element, key) : undefined;\n        }\n        return this.each((i, element) => {\n            set(element, key, isFunction(value) ? value.call(element, i, get(element, key)) : value);\n        });\n    };\n});\n\n$.fn.children = function (selector) {\n    const children = [];\n    this.each((_, element) => {\n        each(element.childNodes, (__, childNode) => {\n            if (!isElement(childNode)) {\n                return;\n            }\n            if (!selector || $(childNode).is(selector)) {\n                children.push(childNode);\n            }\n        });\n    });\n    return new JQ(unique(children));\n};\n\n$.fn.slice = function (...args) {\n    return new JQ([].slice.apply(this, args));\n};\n\n$.fn.eq = function (index) {\n    const ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n    return new JQ(ret);\n};\n\nfunction dir($elements, nameIndex, node, selector, filter) {\n    const ret = [];\n    let target;\n    $elements.each((_, element) => {\n        target = element[node];\n        // 不能包含最顶层的 document 元素\n        while (target && isElement(target)) {\n            // prevUntil, nextUntil, parentsUntil\n            if (nameIndex === 2) {\n                if (selector && $(target).is(selector)) {\n                    break;\n                }\n                if (!filter || $(target).is(filter)) {\n                    ret.push(target);\n                }\n            }\n            // prev, next, parent\n            else if (nameIndex === 0) {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n                break;\n            }\n            // prevAll, nextAll, parents\n            else {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n            }\n            // @ts-ignore\n            target = target[node];\n        }\n    });\n    return new JQ(unique(ret));\n}\n\neach(['', 's', 'sUntil'], (nameIndex, name) => {\n    $.fn[`parent${name}`] = function (selector, filter) {\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'parentNode', selector, filter);\n    };\n});\n\n$.fn.closest = function (selector) {\n    if (this.is(selector)) {\n        return this;\n    }\n    const matched = [];\n    this.parents().each((_, element) => {\n        if ($(element).is(selector)) {\n            matched.push(element);\n            return false;\n        }\n    });\n    return new JQ(matched);\n};\n\nconst rbrace = /^(?:{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\n// 从 `data-*` 中获取的值，需要经过该函数转换\nfunction getData(value) {\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    if (value === 'null') {\n        return null;\n    }\n    if (value === +value + '') {\n        return +value;\n    }\n    if (rbrace.test(value)) {\n        return JSON.parse(value);\n    }\n    return value;\n}\n// 若 value 不存在，则从 `data-*` 中获取值\nfunction dataAttr(element, key, value) {\n    if (isUndefined(value) && element.nodeType === 1) {\n        const name = 'data-' + toKebabCase(key);\n        value = element.getAttribute(name);\n        if (isString(value)) {\n            try {\n                value = getData(value);\n            }\n            catch (e) { }\n        }\n        else {\n            value = undefined;\n        }\n    }\n    return value;\n}\n$.fn.data = function (key, value) {\n    // 获取所有值\n    if (isUndefined(key)) {\n        if (!this.length) {\n            return undefined;\n        }\n        const element = this[0];\n        const resultData = data(element);\n        // window, document 上不存在 `data-*` 属性\n        if (element.nodeType !== 1) {\n            return resultData;\n        }\n        // 从 `data-*` 中获取值\n        const attrs = element.attributes;\n        let i = attrs.length;\n        while (i--) {\n            if (attrs[i]) {\n                let name = attrs[i].name;\n                if (name.indexOf('data-') === 0) {\n                    name = toCamelCase(name.slice(5));\n                    resultData[name] = dataAttr(element, name, resultData[name]);\n                }\n            }\n        }\n        return resultData;\n    }\n    // 同时设置多个值\n    if (isObjectLike(key)) {\n        return this.each(function () {\n            data(this, key);\n        });\n    }\n    // value 传入了 undefined\n    if (arguments.length === 2 && isUndefined(value)) {\n        return this;\n    }\n    // 设置值\n    if (!isUndefined(value)) {\n        return this.each(function () {\n            data(this, key, value);\n        });\n    }\n    // 获取值\n    if (!this.length) {\n        return undefined;\n    }\n    return dataAttr(this[0], key, data(this[0], key));\n};\n\n$.fn.empty = function () {\n    return this.each(function () {\n        this.innerHTML = '';\n    });\n};\n\n$.fn.extend = function (obj) {\n    each(obj, (prop, value) => {\n        // 在 JQ 对象上扩展方法时，需要自己添加 typescript 的类型定义\n        $.fn[prop] = value;\n    });\n    return this;\n};\n\n$.fn.filter = function (selector) {\n    if (isFunction(selector)) {\n        return this.map((index, element) => selector.call(element, index, element) ? element : undefined);\n    }\n    if (isString(selector)) {\n        return this.map((_, element) => $(element).is(selector) ? element : undefined);\n    }\n    const $selector = $(selector);\n    return this.map((_, element) => $selector.get().indexOf(element) > -1 ? element : undefined);\n};\n\n$.fn.first = function () {\n    return this.eq(0);\n};\n\n$.fn.has = function (selector) {\n    const $targets = isString(selector) ? this.find(selector) : $(selector);\n    const { length } = $targets;\n    return this.map(function () {\n        for (let i = 0; i < length; i += 1) {\n            if (contains(this, $targets[i])) {\n                return this;\n            }\n        }\n        return;\n    });\n};\n\n$.fn.hasClass = function (className) {\n    return this[0].classList.contains(className);\n};\n\n/**\n * 值上面的 padding、border、margin 处理\n * @param element\n * @param name\n * @param value\n * @param funcIndex\n * @param includeMargin\n * @param multiply\n */\nfunction handleExtraWidth(element, name, value, funcIndex, includeMargin, multiply) {\n    // 获取元素的 padding, border, margin 宽度（两侧宽度的和）\n    const getExtraWidthValue = (extra) => {\n        return (getExtraWidth(element, name.toLowerCase(), extra) *\n            multiply);\n    };\n    if (funcIndex === 2 && includeMargin) {\n        value += getExtraWidthValue('margin');\n    }\n    if (isBorderBox(element)) {\n        // IE 为 box-sizing: border-box 时，得到的值不含 border 和 padding，这里先修复\n        // 仅获取时需要处理，multiply === 1 为 get\n        if (isIE() && multiply === 1) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 0) {\n            value -= getExtraWidthValue('border');\n        }\n        if (funcIndex === 1) {\n            value -= getExtraWidthValue('border');\n            value -= getExtraWidthValue('padding');\n        }\n    }\n    else {\n        if (funcIndex === 0) {\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 2) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n    }\n    return value;\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n */\nfunction get(element, name, funcIndex, includeMargin) {\n    const clientProp = `client${name}`;\n    const scrollProp = `scroll${name}`;\n    const offsetProp = `offset${name}`;\n    const innerProp = `inner${name}`;\n    // $(window).width()\n    if (isWindow(element)) {\n        // outerWidth, outerHeight 需要包含滚动条的宽度\n        return funcIndex === 2\n            ? element[innerProp]\n            : toElement(document)[clientProp];\n    }\n    // $(document).width()\n    if (isDocument(element)) {\n        const doc = toElement(element);\n        return Math.max(\n        // @ts-ignore\n        element.body[scrollProp], doc[scrollProp], \n        // @ts-ignore\n        element.body[offsetProp], doc[offsetProp], doc[clientProp]);\n    }\n    const value = parseFloat(getComputedStyleValue(element, name.toLowerCase()) || '0');\n    return handleExtraWidth(element, name, value, funcIndex, includeMargin, 1);\n}\n/**\n * 设置元素的样式值\n * @param element\n * @param elementIndex\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n * @param value\n */\nfunction set(element, elementIndex, name, funcIndex, includeMargin, value) {\n    let computedValue = isFunction(value)\n        ? value.call(element, elementIndex, get(element, name, funcIndex, includeMargin))\n        : value;\n    if (computedValue == null) {\n        return;\n    }\n    const $element = $(element);\n    const dimension = name.toLowerCase();\n    // 特殊的值，不需要计算 padding、border、margin\n    if (['auto', 'inherit', ''].indexOf(computedValue) > -1) {\n        $element.css(dimension, computedValue);\n        return;\n    }\n    // 其他值保留原始单位。注意：如果不使用 px 作为单位，则算出的值一般是不准确的\n    const suffix = computedValue.toString().replace(/\\b[0-9.]*/, '');\n    const numerical = parseFloat(computedValue);\n    computedValue =\n        handleExtraWidth(element, name, numerical, funcIndex, includeMargin, -1) +\n            (suffix || 'px');\n    $element.css(dimension, computedValue);\n}\neach(['Width', 'Height'], (_, name) => {\n    each([`inner${name}`, name.toLowerCase(), `outer${name}`], (funcIndex, funcName) => {\n        $.fn[funcName] = function (margin, value) {\n            // 是否是赋值操作\n            const isSet = arguments.length && (funcIndex < 2 || !isBoolean(margin));\n            const includeMargin = margin === true || value === true;\n            // 获取第一个元素的值\n            if (!isSet) {\n                return this.length\n                    ? get(this[0], name, funcIndex, includeMargin)\n                    : undefined;\n            }\n            // 设置每个元素的值\n            return this.each((index, element) => set(element, index, name, funcIndex, includeMargin, margin));\n        };\n    });\n});\n\n$.fn.hide = function () {\n    return this.each(function () {\n        this.style.display = 'none';\n    });\n};\n\neach(['val', 'html', 'text'], (nameIndex, name) => {\n    const props = {\n        0: 'value',\n        1: 'innerHTML',\n        2: 'textContent',\n    };\n    const propName = props[nameIndex];\n    function get($elements) {\n        // text() 获取所有元素的文本\n        if (nameIndex === 2) {\n            // @ts-ignore\n            return map($elements, (element) => toElement(element)[propName]).join('');\n        }\n        // 空集合时，val() 和 html() 返回 undefined\n        if (!$elements.length) {\n            return undefined;\n        }\n        // val() 和 html() 仅获取第一个元素的内容\n        const firstElement = $elements[0];\n        // select multiple 返回数组\n        if (nameIndex === 0 && $(firstElement).is('select[multiple]')) {\n            return map($(firstElement).find('option:checked'), (element) => element.value);\n        }\n        // @ts-ignore\n        return firstElement[propName];\n    }\n    function set(element, value) {\n        // text() 和 html() 赋值为 undefined，则保持原内容不变\n        // val() 赋值为 undefined 则赋值为空\n        if (isUndefined(value)) {\n            if (nameIndex !== 0) {\n                return;\n            }\n            value = '';\n        }\n        if (nameIndex === 1 && isElement(value)) {\n            value = value.outerHTML;\n        }\n        // @ts-ignore\n        element[propName] = value;\n    }\n    $.fn[name] = function (value) {\n        // 获取值\n        if (!arguments.length) {\n            return get(this);\n        }\n        // 设置值\n        return this.each((i, element) => {\n            const computedValue = isFunction(value)\n                ? value.call(element, i, get($(element)))\n                : value;\n            // value 是数组，则选中数组中的元素，反选不在数组中的元素\n            if (nameIndex === 0 && Array.isArray(computedValue)) {\n                // select[multiple]\n                if ($(element).is('select[multiple]')) {\n                    map($(element).find('option'), (option) => (option.selected =\n                        computedValue.indexOf(option.value) >\n                            -1));\n                }\n                // 其他 checkbox, radio 等元素\n                else {\n                    element.checked =\n                        computedValue.indexOf(element.value) > -1;\n                }\n            }\n            else {\n                set(element, computedValue);\n            }\n        });\n    };\n});\n\n$.fn.index = function (selector) {\n    if (!arguments.length) {\n        return this.eq(0).parent().children().get().indexOf(this[0]);\n    }\n    if (isString(selector)) {\n        return $(selector).get().indexOf(this[0]);\n    }\n    return this.get().indexOf($(selector)[0]);\n};\n\n$.fn.last = function () {\n    return this.eq(-1);\n};\n\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`next${name}`] = function (selector, filter) {\n        return dir(this, nameIndex, 'nextElementSibling', selector, filter);\n    };\n});\n\n$.fn.not = function (selector) {\n    const $excludes = this.filter(selector);\n    return this.map((_, element) => $excludes.index(element) > -1 ? undefined : element);\n};\n\n/**\n * 返回最近的用于定位的父元素\n */\n$.fn.offsetParent = function () {\n    return this.map(function () {\n        let offsetParent = this.offsetParent;\n        while (offsetParent && $(offsetParent).css('position') === 'static') {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || document.documentElement;\n    });\n};\n\nfunction floatStyle($element, name) {\n    return parseFloat($element.css(name));\n}\n$.fn.position = function () {\n    if (!this.length) {\n        return undefined;\n    }\n    const $element = this.eq(0);\n    let currentOffset;\n    let parentOffset = {\n        left: 0,\n        top: 0,\n    };\n    if ($element.css('position') === 'fixed') {\n        currentOffset = $element[0].getBoundingClientRect();\n    }\n    else {\n        currentOffset = $element.offset();\n        const $offsetParent = $element.offsetParent();\n        parentOffset = $offsetParent.offset();\n        parentOffset.top += floatStyle($offsetParent, 'border-top-width');\n        parentOffset.left += floatStyle($offsetParent, 'border-left-width');\n    }\n    return {\n        top: currentOffset.top - parentOffset.top - floatStyle($element, 'margin-top'),\n        left: currentOffset.left -\n            parentOffset.left -\n            floatStyle($element, 'margin-left'),\n    };\n};\n\nfunction get$1(element) {\n    if (!element.getClientRects().length) {\n        return { top: 0, left: 0 };\n    }\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset,\n    };\n}\nfunction set$1(element, value, index) {\n    const $element = $(element);\n    const position = $element.css('position');\n    if (position === 'static') {\n        $element.css('position', 'relative');\n    }\n    const currentOffset = get$1(element);\n    const currentTopString = $element.css('top');\n    const currentLeftString = $element.css('left');\n    let currentTop;\n    let currentLeft;\n    const calculatePosition = (position === 'absolute' || position === 'fixed') &&\n        (currentTopString + currentLeftString).indexOf('auto') > -1;\n    if (calculatePosition) {\n        const currentPosition = $element.position();\n        currentTop = currentPosition.top;\n        currentLeft = currentPosition.left;\n    }\n    else {\n        currentTop = parseFloat(currentTopString);\n        currentLeft = parseFloat(currentLeftString);\n    }\n    const computedValue = isFunction(value)\n        ? value.call(element, index, extend({}, currentOffset))\n        : value;\n    $element.css({\n        top: computedValue.top != null\n            ? computedValue.top - currentOffset.top + currentTop\n            : undefined,\n        left: computedValue.left != null\n            ? computedValue.left - currentOffset.left + currentLeft\n            : undefined,\n    });\n}\n$.fn.offset = function (value) {\n    // 获取坐标\n    if (!arguments.length) {\n        if (!this.length) {\n            return undefined;\n        }\n        return get$1(this[0]);\n    }\n    // 设置坐标\n    return this.each(function (index) {\n        set$1(this, value, index);\n    });\n};\n\n$.fn.one = function (types, selector, data, callback) {\n    // @ts-ignore\n    return this.on(types, selector, data, callback, true);\n};\n\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`prev${name}`] = function (selector, filter) {\n        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'previousElementSibling', selector, filter);\n    };\n});\n\n$.fn.removeAttr = function (attributeName) {\n    const names = attributeName.split(' ').filter((name) => name);\n    return this.each(function () {\n        each(names, (_, name) => {\n            this.removeAttribute(name);\n        });\n    });\n};\n\n$.fn.removeData = function (name) {\n    return this.each(function () {\n        removeData(this, name);\n    });\n};\n\n$.fn.removeProp = function (name) {\n    return this.each(function () {\n        try {\n            // @ts-ignore\n            delete this[name];\n        }\n        catch (e) { }\n    });\n};\n\n$.fn.replaceWith = function (newContent) {\n    this.each((index, element) => {\n        let content = newContent;\n        if (isFunction(content)) {\n            content = content.call(element, index, element.innerHTML);\n        }\n        else if (index && !isString(content)) {\n            content = $(content).clone();\n        }\n        $(element).before(content);\n    });\n    return this.remove();\n};\n\n$.fn.replaceAll = function (target) {\n    return $(target).map((index, element) => {\n        $(element).replaceWith(index ? this.clone() : this);\n        return this.get();\n    });\n};\n\n/**\n * 将表单元素的值组合成键值对数组\n * @returns {Array}\n */\n$.fn.serializeArray = function () {\n    const result = [];\n    this.each((_, element) => {\n        const elements = element instanceof HTMLFormElement ? element.elements : [element];\n        $(elements).each((_, element) => {\n            const $element = $(element);\n            const type = element.type;\n            const nodeName = element.nodeName.toLowerCase();\n            if (nodeName !== 'fieldset' &&\n                element.name &&\n                !element.disabled &&\n                ['input', 'select', 'textarea', 'keygen'].indexOf(nodeName) > -1 &&\n                ['submit', 'button', 'image', 'reset', 'file'].indexOf(type) === -1 &&\n                (['radio', 'checkbox'].indexOf(type) === -1 ||\n                    element.checked)) {\n                const value = $element.val();\n                const valueArr = Array.isArray(value) ? value : [value];\n                valueArr.forEach((value) => {\n                    result.push({\n                        name: element.name,\n                        value,\n                    });\n                });\n            }\n        });\n    });\n    return result;\n};\n\n$.fn.serialize = function () {\n    return param(this.serializeArray());\n};\n\nconst elementDisplay = {};\n/**\n * 获取元素的初始 display 值，用于 .show() 方法\n * @param nodeName\n */\nfunction defaultDisplay(nodeName) {\n    let element;\n    let display;\n    if (!elementDisplay[nodeName]) {\n        element = document.createElement(nodeName);\n        document.body.appendChild(element);\n        display = getStyle(element, 'display');\n        element.parentNode.removeChild(element);\n        if (display === 'none') {\n            display = 'block';\n        }\n        elementDisplay[nodeName] = display;\n    }\n    return elementDisplay[nodeName];\n}\n/**\n * 显示指定元素\n * @returns {JQ}\n */\n$.fn.show = function () {\n    return this.each(function () {\n        if (this.style.display === 'none') {\n            this.style.display = '';\n        }\n        if (getStyle(this, 'display') === 'none') {\n            this.style.display = defaultDisplay(this.nodeName);\n        }\n    });\n};\n\n/**\n * 取得同辈元素的集合\n * @param selector {String=}\n * @returns {JQ}\n */\n$.fn.siblings = function (selector) {\n    return this.prevAll(selector).add(this.nextAll(selector));\n};\n\n/**\n * 切换元素的显示状态\n */\n$.fn.toggle = function () {\n    return this.each(function () {\n        getStyle(this, 'display') === 'none' ? $(this).show() : $(this).hide();\n    });\n};\n\n$.fn.reflow = function () {\n    return this.each(function () {\n        return this.clientLeft;\n    });\n};\n\n$.fn.transition = function (duration) {\n    if (isNumber(duration)) {\n        duration = `${duration}ms`;\n    }\n    return this.each(function () {\n        this.style.webkitTransitionDuration = duration;\n        this.style.transitionDuration = duration;\n    });\n};\n\n$.fn.transitionEnd = function (callback) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const events = ['webkitTransitionEnd', 'transitionend'];\n    function fireCallback(e) {\n        if (e.target !== this) {\n            return;\n        }\n        // @ts-ignore\n        callback.call(this, e);\n        each(events, (_, event) => {\n            that.off(event, fireCallback);\n        });\n    }\n    each(events, (_, event) => {\n        that.on(event, fireCallback);\n    });\n    return this;\n};\n\n$.fn.transformOrigin = function (transformOrigin) {\n    return this.each(function () {\n        this.style.webkitTransformOrigin = transformOrigin;\n        this.style.transformOrigin = transformOrigin;\n    });\n};\n\n$.fn.transform = function (transform) {\n    return this.each(function () {\n        this.style.webkitTransform = transform;\n        this.style.transform = transform;\n    });\n};\n\n/**\n * CSS 选择器和初始化函数组成的对象\n */\nconst entries = {};\n/**\n * 注册并执行初始化函数\n * @param selector CSS 选择器\n * @param apiInit 初始化函数\n * @param i 元素索引\n * @param element 元素\n */\nfunction mutation(selector, apiInit, i, element) {\n    let selectors = data(element, '_mdui_mutation');\n    if (!selectors) {\n        selectors = [];\n        data(element, '_mdui_mutation', selectors);\n    }\n    if (selectors.indexOf(selector) === -1) {\n        selectors.push(selector);\n        apiInit.call(element, i, element);\n    }\n}\n\n$.fn.mutation = function () {\n    return this.each((i, element) => {\n        const $this = $(element);\n        each(entries, (selector, apiInit) => {\n            if ($this.is(selector)) {\n                mutation(selector, apiInit, i, element);\n            }\n            $this.find(selector).each((i, element) => {\n                mutation(selector, apiInit, i, element);\n            });\n        });\n    });\n};\n\n$.showOverlay = function (zIndex) {\n    let $overlay = $('.mdui-overlay');\n    if ($overlay.length) {\n        $overlay.data('_overlay_is_deleted', false);\n        if (!isUndefined(zIndex)) {\n            $overlay.css('z-index', zIndex);\n        }\n    }\n    else {\n        if (isUndefined(zIndex)) {\n            zIndex = 2000;\n        }\n        $overlay = $('<div class=\"mdui-overlay\">')\n            .appendTo(document.body)\n            .reflow()\n            .css('z-index', zIndex);\n    }\n    let level = $overlay.data('_overlay_level') || 0;\n    return $overlay.data('_overlay_level', ++level).addClass('mdui-overlay-show');\n};\n\n$.hideOverlay = function (force = false) {\n    const $overlay = $('.mdui-overlay');\n    if (!$overlay.length) {\n        return;\n    }\n    let level = force ? 1 : $overlay.data('_overlay_level');\n    if (level > 1) {\n        $overlay.data('_overlay_level', --level);\n        return;\n    }\n    $overlay\n        .data('_overlay_level', 0)\n        .removeClass('mdui-overlay-show')\n        .data('_overlay_is_deleted', true)\n        .transitionEnd(() => {\n        if ($overlay.data('_overlay_is_deleted')) {\n            $overlay.remove();\n        }\n    });\n};\n\n$.lockScreen = function () {\n    const $body = $('body');\n    // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n    const newBodyWidth = $body.width();\n    let level = $body.data('_lockscreen_level') || 0;\n    $body\n        .addClass('mdui-locked')\n        .width(newBodyWidth)\n        .data('_lockscreen_level', ++level);\n};\n\n$.unlockScreen = function (force = false) {\n    const $body = $('body');\n    let level = force ? 1 : $body.data('_lockscreen_level');\n    if (level > 1) {\n        $body.data('_lockscreen_level', --level);\n        return;\n    }\n    $body.data('_lockscreen_level', 0).removeClass('mdui-locked').width('');\n};\n\n$.throttle = function (fn, delay = 16) {\n    let timer = null;\n    return function (...args) {\n        if (isNull(timer)) {\n            timer = setTimeout(() => {\n                fn.apply(this, args);\n                timer = null;\n            }, delay);\n        }\n    };\n};\n\nconst GUID = {};\n$.guid = function (name) {\n    if (!isUndefined(name) && !isUndefined(GUID[name])) {\n        return GUID[name];\n    }\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    const guid = '_' +\n        s4() +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        s4() +\n        s4();\n    if (!isUndefined(name)) {\n        GUID[name] = guid;\n    }\n    return guid;\n};\n\nmdui.mutation = function (selector, apiInit) {\n    if (isUndefined(selector) || isUndefined(apiInit)) {\n        $(document).mutation();\n        return;\n    }\n    entries[selector] = apiInit;\n    $(selector).each((i, element) => mutation(selector, apiInit, i, element));\n};\n\n/**\n * 触发组件上的事件\n * @param eventName 事件名\n * @param componentName 组件名\n * @param target 在该元素上触发事件\n * @param instance 组件实例\n * @param parameters 事件参数\n */\nfunction componentEvent(eventName, componentName, target, instance, parameters) {\n    if (!parameters) {\n        parameters = {};\n    }\n    // @ts-ignore\n    parameters.inst = instance;\n    const fullEventName = `${eventName}.mdui.${componentName}`;\n    // jQuery 事件\n    // @ts-ignore\n    if (typeof jQuery !== 'undefined') {\n        // @ts-ignore\n        jQuery(target).trigger(fullEventName, parameters);\n    }\n    const $target = $(target);\n    // mdui.jq 事件\n    $target.trigger(fullEventName, parameters);\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n        detail: parameters,\n    };\n    const eventObject = new CustomEvent(fullEventName, eventParams);\n    // @ts-ignore\n    eventObject._detail = parameters;\n    $target[0].dispatchEvent(eventObject);\n}\n\nconst $document = $(document);\nconst $window = $(window);\n$('body');\n\nconst DEFAULT_OPTIONS = {\n    tolerance: 5,\n    offset: 0,\n    initialClass: 'mdui-headroom',\n    pinnedClass: 'mdui-headroom-pinned-top',\n    unpinnedClass: 'mdui-headroom-unpinned-top',\n};\nclass Headroom {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS);\n        /**\n         * 当前 headroom 的状态\n         */\n        this.state = 'pinned';\n        /**\n         * 当前是否启用\n         */\n        this.isEnable = false;\n        /**\n         * 上次滚动后，垂直方向的距离\n         */\n        this.lastScrollY = 0;\n        /**\n         * AnimationFrame ID\n         */\n        this.rafId = 0;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        // tolerance 参数若为数值，转换为对象\n        const tolerance = this.options.tolerance;\n        if (isNumber(tolerance)) {\n            this.options.tolerance = {\n                down: tolerance,\n                up: tolerance,\n            };\n        }\n        this.enable();\n    }\n    /**\n     * 滚动时的处理\n     */\n    onScroll() {\n        this.rafId = window.requestAnimationFrame(() => {\n            const currentScrollY = window.pageYOffset;\n            const direction = currentScrollY > this.lastScrollY ? 'down' : 'up';\n            const tolerance = this.options.tolerance[direction];\n            const scrolled = Math.abs(currentScrollY - this.lastScrollY);\n            const toleranceExceeded = scrolled >= tolerance;\n            if (currentScrollY > this.lastScrollY &&\n                currentScrollY >= this.options.offset &&\n                toleranceExceeded) {\n                this.unpin();\n            }\n            else if ((currentScrollY < this.lastScrollY && toleranceExceeded) ||\n                currentScrollY <= this.options.offset) {\n                this.pin();\n            }\n            this.lastScrollY = currentScrollY;\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'headroom', this.$element, this);\n    }\n    /**\n     * 动画结束的回调\n     */\n    transitionEnd() {\n        if (this.state === 'pinning') {\n            this.state = 'pinned';\n            this.triggerEvent('pinned');\n        }\n        if (this.state === 'unpinning') {\n            this.state = 'unpinned';\n            this.triggerEvent('unpinned');\n        }\n    }\n    /**\n     * 使元素固定住\n     */\n    pin() {\n        if (this.state === 'pinning' ||\n            this.state === 'pinned' ||\n            !this.$element.hasClass(this.options.initialClass)) {\n            return;\n        }\n        this.triggerEvent('pin');\n        this.state = 'pinning';\n        this.$element\n            .removeClass(this.options.unpinnedClass)\n            .addClass(this.options.pinnedClass)\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 使元素隐藏\n     */\n    unpin() {\n        if (this.state === 'unpinning' ||\n            this.state === 'unpinned' ||\n            !this.$element.hasClass(this.options.initialClass)) {\n            return;\n        }\n        this.triggerEvent('unpin');\n        this.state = 'unpinning';\n        this.$element\n            .removeClass(this.options.pinnedClass)\n            .addClass(this.options.unpinnedClass)\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 启用 headroom 插件\n     */\n    enable() {\n        if (this.isEnable) {\n            return;\n        }\n        this.isEnable = true;\n        this.state = 'pinned';\n        this.$element\n            .addClass(this.options.initialClass)\n            .removeClass(this.options.pinnedClass)\n            .removeClass(this.options.unpinnedClass);\n        this.lastScrollY = window.pageYOffset;\n        $window.on('scroll', () => this.onScroll());\n    }\n    /**\n     * 禁用 headroom 插件\n     */\n    disable() {\n        if (!this.isEnable) {\n            return;\n        }\n        this.isEnable = false;\n        this.$element\n            .removeClass(this.options.initialClass)\n            .removeClass(this.options.pinnedClass)\n            .removeClass(this.options.unpinnedClass);\n        $window.off('scroll', () => this.onScroll());\n        window.cancelAnimationFrame(this.rafId);\n    }\n    /**\n     * 获取当前状态。共包含四种状态：`pinning`、`pinned`、`unpinning`、`unpinned`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Headroom = Headroom;\n\n/**\n * 解析 DATA API 参数\n * @param element 元素\n * @param name 属性名\n */\nfunction parseOptions(element, name) {\n    const attr = $(element).attr(name);\n    if (!attr) {\n        return {};\n    }\n    return new Function('', `var json = ${attr}; return JSON.parse(JSON.stringify(json));`)();\n}\n\nconst customAttr = 'mdui-headroom';\n$(() => {\n    mdui.mutation(`[${customAttr}]`, function () {\n        new mdui.Headroom(this, parseOptions(this, customAttr));\n    });\n});\n\nconst DEFAULT_OPTIONS$1 = {\n    accordion: false,\n};\nclass CollapseAbstract {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$1);\n        // CSS 类名\n        const classPrefix = `mdui-${this.getNamespace()}-item`;\n        this.classItem = classPrefix;\n        this.classItemOpen = `${classPrefix}-open`;\n        this.classHeader = `${classPrefix}-header`;\n        this.classBody = `${classPrefix}-body`;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.bindEvent();\n    }\n    /**\n     * 绑定事件\n     */\n    bindEvent() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 点击 header 时，打开/关闭 item\n        this.$element.on('click', `.${this.classHeader}`, function () {\n            const $header = $(this);\n            const $item = $header.parent();\n            const $items = that.getItems();\n            $items.each((_, item) => {\n                if ($item.is(item)) {\n                    that.toggle(item);\n                }\n            });\n        });\n        // 点击关闭按钮时，关闭 item\n        this.$element.on('click', `[mdui-${this.getNamespace()}-item-close]`, function () {\n            const $target = $(this);\n            const $item = $target.parents(`.${that.classItem}`).first();\n            that.close($item);\n        });\n    }\n    /**\n     * 指定 item 是否处于打开状态\n     * @param $item\n     */\n    isOpen($item) {\n        return $item.hasClass(this.classItemOpen);\n    }\n    /**\n     * 获取所有 item\n     */\n    getItems() {\n        return this.$element.children(`.${this.classItem}`);\n    }\n    /**\n     * 获取指定 item\n     * @param item\n     */\n    getItem(item) {\n        if (isNumber(item)) {\n            return this.getItems().eq(item);\n        }\n        return $(item).first();\n    }\n    /**\n     * 触发组件事件\n     * @param name 事件名\n     * @param $item 事件触发的目标 item\n     */\n    triggerEvent(name, $item) {\n        componentEvent(name, this.getNamespace(), $item, this);\n    }\n    /**\n     * 动画结束回调\n     * @param $content body 元素\n     * @param $item item 元素\n     */\n    transitionEnd($content, $item) {\n        if (this.isOpen($item)) {\n            $content.transition(0).height('auto').reflow().transition('');\n            this.triggerEvent('opened', $item);\n        }\n        else {\n            $content.height('');\n            this.triggerEvent('closed', $item);\n        }\n    }\n    /**\n     * 打开指定面板项\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    open(item) {\n        const $item = this.getItem(item);\n        if (this.isOpen($item)) {\n            return;\n        }\n        // 关闭其他项\n        if (this.options.accordion) {\n            this.$element.children(`.${this.classItemOpen}`).each((_, element) => {\n                const $element = $(element);\n                if (!$element.is($item)) {\n                    this.close($element);\n                }\n            });\n        }\n        const $content = $item.children(`.${this.classBody}`);\n        $content\n            .height($content[0].scrollHeight)\n            .transitionEnd(() => this.transitionEnd($content, $item));\n        this.triggerEvent('open', $item);\n        $item.addClass(this.classItemOpen);\n    }\n    /**\n     * 关闭指定面板项\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    close(item) {\n        const $item = this.getItem(item);\n        if (!this.isOpen($item)) {\n            return;\n        }\n        const $content = $item.children(`.${this.classBody}`);\n        this.triggerEvent('close', $item);\n        $item.removeClass(this.classItemOpen);\n        $content\n            .transition(0)\n            .height($content[0].scrollHeight)\n            .reflow()\n            .transition('')\n            .height('')\n            .transitionEnd(() => this.transitionEnd($content, $item));\n    }\n    /**\n     * 切换指定面板项的打开状态\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    toggle(item) {\n        const $item = this.getItem(item);\n        this.isOpen($item) ? this.close($item) : this.open($item);\n    }\n    /**\n     * 打开所有面板项\n     */\n    openAll() {\n        this.getItems().each((_, element) => this.open(element));\n    }\n    /**\n     * 关闭所有面板项\n     */\n    closeAll() {\n        this.getItems().each((_, element) => this.close(element));\n    }\n}\n\nclass Collapse extends CollapseAbstract {\n    getNamespace() {\n        return 'collapse';\n    }\n}\nmdui.Collapse = Collapse;\n\nconst customAttr$1 = 'mdui-collapse';\n$(() => {\n    mdui.mutation(`[${customAttr$1}]`, function () {\n        new mdui.Collapse(this, parseOptions(this, customAttr$1));\n    });\n});\n\nclass Panel extends CollapseAbstract {\n    getNamespace() {\n        return 'panel';\n    }\n}\nmdui.Panel = Panel;\n\nconst customAttr$2 = 'mdui-panel';\n$(() => {\n    mdui.mutation(`[${customAttr$2}]`, function () {\n        new mdui.Panel(this, parseOptions(this, customAttr$2));\n    });\n});\n\nclass Table {\n    constructor(selector) {\n        /**\n         * 表头 tr 元素\n         */\n        this.$thRow = $();\n        /**\n         * 表格 body 中的 tr 元素\n         */\n        this.$tdRows = $();\n        /**\n         * 表头的 checkbox 元素\n         */\n        this.$thCheckbox = $();\n        /**\n         * 表格 body 中的 checkbox 元素\n         */\n        this.$tdCheckboxs = $();\n        /**\n         * 表格行是否可选择\n         */\n        this.selectable = false;\n        /**\n         * 已选中的行数\n         */\n        this.selectedRow = 0;\n        this.$element = $(selector).first();\n        this.init();\n    }\n    /**\n     * 初始化表格\n     */\n    init() {\n        this.$thRow = this.$element.find('thead tr');\n        this.$tdRows = this.$element.find('tbody tr');\n        this.selectable = this.$element.hasClass('mdui-table-selectable');\n        this.updateThCheckbox();\n        this.updateTdCheckbox();\n        this.updateNumericCol();\n    }\n    /**\n     * 生成 checkbox 的 HTML 结构\n     * @param tag 标签名\n     */\n    createCheckboxHTML(tag) {\n        return (`<${tag} class=\"mdui-table-cell-checkbox\">` +\n            '<label class=\"mdui-checkbox\">' +\n            '<input type=\"checkbox\"/>' +\n            '<i class=\"mdui-checkbox-icon\"></i>' +\n            '</label>' +\n            `</${tag}>`);\n    }\n    /**\n     * 更新表头 checkbox 的状态\n     */\n    updateThCheckboxStatus() {\n        const checkbox = this.$thCheckbox[0];\n        const selectedRow = this.selectedRow;\n        const tdRowsLength = this.$tdRows.length;\n        checkbox.checked = selectedRow === tdRowsLength;\n        checkbox.indeterminate = !!selectedRow && selectedRow !== tdRowsLength;\n    }\n    /**\n     * 更新表格行的 checkbox\n     */\n    updateTdCheckbox() {\n        const rowSelectedClass = 'mdui-table-row-selected';\n        this.$tdRows.each((_, row) => {\n            const $row = $(row);\n            // 移除旧的 checkbox\n            $row.find('.mdui-table-cell-checkbox').remove();\n            if (!this.selectable) {\n                return;\n            }\n            // 创建 DOM\n            const $checkbox = $(this.createCheckboxHTML('td'))\n                .prependTo($row)\n                .find('input[type=\"checkbox\"]');\n            // 默认选中的行\n            if ($row.hasClass(rowSelectedClass)) {\n                $checkbox[0].checked = true;\n                this.selectedRow++;\n            }\n            this.updateThCheckboxStatus();\n            // 绑定事件\n            $checkbox.on('change', () => {\n                if ($checkbox[0].checked) {\n                    $row.addClass(rowSelectedClass);\n                    this.selectedRow++;\n                }\n                else {\n                    $row.removeClass(rowSelectedClass);\n                    this.selectedRow--;\n                }\n                this.updateThCheckboxStatus();\n            });\n            this.$tdCheckboxs = this.$tdCheckboxs.add($checkbox);\n        });\n    }\n    /**\n     * 更新表头的 checkbox\n     */\n    updateThCheckbox() {\n        // 移除旧的 checkbox\n        this.$thRow.find('.mdui-table-cell-checkbox').remove();\n        if (!this.selectable) {\n            return;\n        }\n        this.$thCheckbox = $(this.createCheckboxHTML('th'))\n            .prependTo(this.$thRow)\n            .find('input[type=\"checkbox\"]')\n            .on('change', () => {\n            const isCheckedAll = this.$thCheckbox[0].checked;\n            this.selectedRow = isCheckedAll ? this.$tdRows.length : 0;\n            this.$tdCheckboxs.each((_, checkbox) => {\n                checkbox.checked = isCheckedAll;\n            });\n            this.$tdRows.each((_, row) => {\n                isCheckedAll\n                    ? $(row).addClass('mdui-table-row-selected')\n                    : $(row).removeClass('mdui-table-row-selected');\n            });\n        });\n    }\n    /**\n     * 更新数值列\n     */\n    updateNumericCol() {\n        const numericClass = 'mdui-table-col-numeric';\n        this.$thRow.find('th').each((i, th) => {\n            const isNumericCol = $(th).hasClass(numericClass);\n            this.$tdRows.each((_, row) => {\n                const $td = $(row).find('td').eq(i);\n                isNumericCol\n                    ? $td.addClass(numericClass)\n                    : $td.removeClass(numericClass);\n            });\n        });\n    }\n}\nconst dataName = '_mdui_table';\n$(() => {\n    mdui.mutation('.mdui-table', function () {\n        const $element = $(this);\n        if (!$element.data(dataName)) {\n            $element.data(dataName, new Table($element));\n        }\n    });\n});\nmdui.updateTables = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-table') : $(selector);\n    $elements.each((_, element) => {\n        const $element = $(element);\n        const instance = $element.data(dataName);\n        if (instance) {\n            instance.init();\n        }\n        else {\n            $element.data(dataName, new Table($element));\n        }\n    });\n};\n\n/**\n * touch 事件后的 500ms 内禁用 mousedown 事件\n *\n * 不支持触控的屏幕上事件顺序为 mousedown -> mouseup -> click\n * 支持触控的屏幕上事件顺序为 touchstart -> touchend -> mousedown -> mouseup -> click\n *\n * 在每一个事件中都使用 TouchHandler.isAllow(event) 判断事件是否可执行\n * 在 touchstart 和 touchmove、touchend、touchcancel\n *\n * (function () {\n *   $document\n *     .on(start, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       register(e);\n *       console.log(e.type);\n *     })\n *     .on(move, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       console.log(e.type);\n *     })\n *     .on(end, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       console.log(e.type);\n *     })\n *     .on(unlock, register);\n * })();\n */\nconst startEvent = 'touchstart mousedown';\nconst moveEvent = 'touchmove mousemove';\nconst endEvent = 'touchend mouseup';\nconst cancelEvent = 'touchcancel mouseleave';\nconst unlockEvent = 'touchend touchmove touchcancel';\nlet touches = 0;\n/**\n * 该事件是否被允许，在执行事件前调用该方法判断事件是否可以执行\n * 若已触发 touch 事件，则阻止之后的鼠标事件\n * @param event\n */\nfunction isAllow(event) {\n    return !(touches &&\n        [\n            'mousedown',\n            'mouseup',\n            'mousemove',\n            'click',\n            'mouseover',\n            'mouseout',\n            'mouseenter',\n            'mouseleave',\n        ].indexOf(event.type) > -1);\n}\n/**\n * 在 touchstart 和 touchmove、touchend、touchcancel 事件中调用该方法注册事件\n * @param event\n */\nfunction register(event) {\n    if (event.type === 'touchstart') {\n        // 触发了 touch 事件\n        touches += 1;\n    }\n    else if (['touchmove', 'touchend', 'touchcancel'].indexOf(event.type) > -1) {\n        // touch 事件结束 500ms 后解除对鼠标事件的阻止\n        setTimeout(function () {\n            if (touches) {\n                touches -= 1;\n            }\n        }, 500);\n    }\n}\n\n/**\n * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n *\n * Inspired by https://github.com/fians/Waves\n */\n/**\n * 显示涟漪动画\n * @param event\n * @param $ripple\n */\nfunction show(event, $ripple) {\n    // 鼠标右键不产生涟漪\n    if (event instanceof MouseEvent && event.button === 2) {\n        return;\n    }\n    // 点击位置坐标\n    const touchPosition = typeof TouchEvent !== 'undefined' &&\n        event instanceof TouchEvent &&\n        event.touches.length\n        ? event.touches[0]\n        : event;\n    const touchStartX = touchPosition.pageX;\n    const touchStartY = touchPosition.pageY;\n    // 涟漪位置\n    const offset = $ripple.offset();\n    const height = $ripple.innerHeight();\n    const width = $ripple.innerWidth();\n    const center = {\n        x: touchStartX - offset.left,\n        y: touchStartY - offset.top,\n    };\n    const diameter = Math.max(Math.pow(Math.pow(height, 2) + Math.pow(width, 2), 0.5), 48);\n    // 涟漪扩散动画\n    const translate = `translate3d(${-center.x + width / 2}px,` +\n        `${-center.y + height / 2}px, 0) scale(1)`;\n    // 涟漪的 DOM 结构，并缓存动画效果\n    $(`<div class=\"mdui-ripple-wave\" ` +\n        `style=\"width:${diameter}px;height:${diameter}px;` +\n        `margin-top:-${diameter / 2}px;margin-left:-${diameter / 2}px;` +\n        `left:${center.x}px;top:${center.y}px;\"></div>`)\n        .data('_ripple_wave_translate', translate)\n        .prependTo($ripple)\n        .reflow()\n        .transform(translate);\n}\n/**\n * 隐藏并移除涟漪\n * @param $wave\n */\nfunction removeRipple($wave) {\n    if (!$wave.length || $wave.data('_ripple_wave_removed')) {\n        return;\n    }\n    $wave.data('_ripple_wave_removed', true);\n    let removeTimer = setTimeout(() => $wave.remove(), 400);\n    const translate = $wave.data('_ripple_wave_translate');\n    $wave\n        .addClass('mdui-ripple-wave-fill')\n        .transform(translate.replace('scale(1)', 'scale(1.01)'))\n        .transitionEnd(() => {\n        clearTimeout(removeTimer);\n        $wave\n            .addClass('mdui-ripple-wave-out')\n            .transform(translate.replace('scale(1)', 'scale(1.01)'));\n        removeTimer = setTimeout(() => $wave.remove(), 700);\n        setTimeout(() => {\n            $wave.transitionEnd(() => {\n                clearTimeout(removeTimer);\n                $wave.remove();\n            });\n        }, 0);\n    });\n}\n/**\n * 隐藏涟漪动画\n * @param this\n */\nfunction hide() {\n    const $ripple = $(this);\n    $ripple.children('.mdui-ripple-wave').each((_, wave) => {\n        removeRipple($(wave));\n    });\n    $ripple.off(`${moveEvent} ${endEvent} ${cancelEvent}`, hide);\n}\n/**\n * 显示涟漪，并绑定 touchend 等事件\n * @param event\n */\nfunction showRipple(event) {\n    if (!isAllow(event)) {\n        return;\n    }\n    register(event);\n    // Chrome 59 点击滚动条时，会在 document 上触发事件\n    if (event.target === document) {\n        return;\n    }\n    const $target = $(event.target);\n    // 获取含 .mdui-ripple 类的元素\n    const $ripple = $target.hasClass('mdui-ripple')\n        ? $target\n        : $target.parents('.mdui-ripple').first();\n    if (!$ripple.length) {\n        return;\n    }\n    // 禁用状态的元素上不产生涟漪效果\n    if ($ripple.prop('disabled') || !isUndefined($ripple.attr('disabled'))) {\n        return;\n    }\n    if (event.type === 'touchstart') {\n        let hidden = false;\n        // touchstart 触发指定时间后开始涟漪动画，避免手指滑动时也触发涟漪\n        let timer = setTimeout(() => {\n            timer = 0;\n            show(event, $ripple);\n        }, 200);\n        const hideRipple = () => {\n            // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画\n            if (timer) {\n                clearTimeout(timer);\n                timer = 0;\n                show(event, $ripple);\n            }\n            if (!hidden) {\n                hidden = true;\n                hide.call($ripple);\n            }\n        };\n        // 手指移动后，移除涟漪动画\n        const touchMove = () => {\n            if (timer) {\n                clearTimeout(timer);\n                timer = 0;\n            }\n            hideRipple();\n        };\n        $ripple.on('touchmove', touchMove).on('touchend touchcancel', hideRipple);\n    }\n    else {\n        show(event, $ripple);\n        $ripple.on(`${moveEvent} ${endEvent} ${cancelEvent}`, hide);\n    }\n}\n$(() => {\n    $document.on(startEvent, showRipple).on(unlockEvent, register);\n});\n\nconst defaultData = {\n    reInit: false,\n    domLoadedEvent: false,\n};\n/**\n * 输入框事件\n * @param event\n * @param data\n */\nfunction inputEvent(event, data = {}) {\n    data = extend({}, defaultData, data);\n    const input = event.target;\n    const $input = $(input);\n    const eventType = event.type;\n    const value = $input.val();\n    // 文本框类型\n    const inputType = $input.attr('type') || '';\n    if (['checkbox', 'button', 'submit', 'range', 'radio', 'image'].indexOf(inputType) > -1) {\n        return;\n    }\n    const $textfield = $input.parent('.mdui-textfield');\n    // 输入框是否聚焦\n    if (eventType === 'focus') {\n        $textfield.addClass('mdui-textfield-focus');\n    }\n    if (eventType === 'blur') {\n        $textfield.removeClass('mdui-textfield-focus');\n    }\n    // 输入框是否为空\n    if (eventType === 'blur' || eventType === 'input') {\n        value\n            ? $textfield.addClass('mdui-textfield-not-empty')\n            : $textfield.removeClass('mdui-textfield-not-empty');\n    }\n    // 输入框是否禁用\n    input.disabled\n        ? $textfield.addClass('mdui-textfield-disabled')\n        : $textfield.removeClass('mdui-textfield-disabled');\n    // 表单验证\n    if ((eventType === 'input' || eventType === 'blur') &&\n        !data.domLoadedEvent &&\n        input.validity) {\n        input.validity.valid\n            ? $textfield.removeClass('mdui-textfield-invalid-html5')\n            : $textfield.addClass('mdui-textfield-invalid-html5');\n    }\n    // textarea 高度自动调整\n    if ($input.is('textarea')) {\n        // IE bug：textarea 的值仅为多个换行，不含其他内容时，textarea 的高度不准确\n        //         此时，在计算高度前，在值的开头加入一个空格，计算完后，移除空格\n        const inputValue = value;\n        let hasExtraSpace = false;\n        if (inputValue.replace(/[\\r\\n]/g, '') === '') {\n            $input.val(' ' + inputValue);\n            hasExtraSpace = true;\n        }\n        // 设置 textarea 高度\n        $input.outerHeight('');\n        const height = $input.outerHeight();\n        const scrollHeight = input.scrollHeight;\n        if (scrollHeight > height) {\n            $input.outerHeight(scrollHeight);\n        }\n        // 计算完，还原 textarea 的值\n        if (hasExtraSpace) {\n            $input.val(inputValue);\n        }\n    }\n    // 实时字数统计\n    if (data.reInit) {\n        $textfield.find('.mdui-textfield-counter').remove();\n    }\n    const maxLength = $input.attr('maxlength');\n    if (maxLength) {\n        if (data.reInit || data.domLoadedEvent) {\n            $('<div class=\"mdui-textfield-counter\">' +\n                `<span class=\"mdui-textfield-counter-inputed\"></span> / ${maxLength}` +\n                '</div>').appendTo($textfield);\n        }\n        $textfield\n            .find('.mdui-textfield-counter-inputed')\n            .text(value.length.toString());\n    }\n    // 含 帮助文本、错误提示、字数统计 时，增加文本框底部内边距\n    if ($textfield.find('.mdui-textfield-helper').length ||\n        $textfield.find('.mdui-textfield-error').length ||\n        maxLength) {\n        $textfield.addClass('mdui-textfield-has-bottom');\n    }\n}\n$(() => {\n    // 绑定事件\n    $document.on('input focus blur', '.mdui-textfield-input', { useCapture: true }, inputEvent);\n    // 可展开文本框展开\n    $document.on('click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .addClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')[0]\n            .focus();\n    });\n    // 可展开文本框关闭\n    $document.on('click', '.mdui-textfield-expanded .mdui-textfield-close', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .removeClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')\n            .val('');\n    });\n    /**\n     * 初始化文本框\n     */\n    mdui.mutation('.mdui-textfield', function () {\n        $(this).find('.mdui-textfield-input').trigger('input', {\n            domLoadedEvent: true,\n        });\n    });\n});\nmdui.updateTextFields = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-textfield') : $(selector);\n    $elements.each((_, element) => {\n        $(element).find('.mdui-textfield-input').trigger('input', {\n            reInit: true,\n        });\n    });\n};\n\n/**\n * 滑块的值改变后修改滑块样式\n * @param $slider\n */\nfunction updateValueStyle($slider) {\n    const data = $slider.data();\n    const $track = data._slider_$track;\n    const $fill = data._slider_$fill;\n    const $thumb = data._slider_$thumb;\n    const $input = data._slider_$input;\n    const min = data._slider_min;\n    const max = data._slider_max;\n    const isDisabled = data._slider_disabled;\n    const isDiscrete = data._slider_discrete;\n    const $thumbText = data._slider_$thumbText;\n    const value = $input.val();\n    const percent = ((value - min) / (max - min)) * 100;\n    $fill.width(`${percent}%`);\n    $track.width(`${100 - percent}%`);\n    if (isDisabled) {\n        $fill.css('padding-right', '6px');\n        $track.css('padding-left', '6px');\n    }\n    $thumb.css('left', `${percent}%`);\n    if (isDiscrete) {\n        $thumbText.text(value);\n    }\n    percent === 0\n        ? $slider.addClass('mdui-slider-zero')\n        : $slider.removeClass('mdui-slider-zero');\n}\n/**\n * 重新初始化滑块\n * @param $slider\n */\nfunction reInit($slider) {\n    const $track = $('<div class=\"mdui-slider-track\"></div>');\n    const $fill = $('<div class=\"mdui-slider-fill\"></div>');\n    const $thumb = $('<div class=\"mdui-slider-thumb\"></div>');\n    const $input = $slider.find('input[type=\"range\"]');\n    const isDisabled = $input[0].disabled;\n    const isDiscrete = $slider.hasClass('mdui-slider-discrete');\n    // 禁用状态\n    isDisabled\n        ? $slider.addClass('mdui-slider-disabled')\n        : $slider.removeClass('mdui-slider-disabled');\n    // 重新填充 HTML\n    $slider.find('.mdui-slider-track').remove();\n    $slider.find('.mdui-slider-fill').remove();\n    $slider.find('.mdui-slider-thumb').remove();\n    $slider.append($track).append($fill).append($thumb);\n    // 间续型滑块\n    let $thumbText = $();\n    if (isDiscrete) {\n        $thumbText = $('<span></span>');\n        $thumb.empty().append($thumbText);\n    }\n    $slider.data('_slider_$track', $track);\n    $slider.data('_slider_$fill', $fill);\n    $slider.data('_slider_$thumb', $thumb);\n    $slider.data('_slider_$input', $input);\n    $slider.data('_slider_min', $input.attr('min'));\n    $slider.data('_slider_max', $input.attr('max'));\n    $slider.data('_slider_disabled', isDisabled);\n    $slider.data('_slider_discrete', isDiscrete);\n    $slider.data('_slider_$thumbText', $thumbText);\n    // 设置默认值\n    updateValueStyle($slider);\n}\nconst rangeSelector = '.mdui-slider input[type=\"range\"]';\n$(() => {\n    // 滑块滑动事件\n    $document.on('input change', rangeSelector, function () {\n        const $slider = $(this).parent();\n        updateValueStyle($slider);\n    });\n    // 开始触摸滑块事件\n    $document.on(startEvent, rangeSelector, function (event) {\n        if (!isAllow(event)) {\n            return;\n        }\n        register(event);\n        if (this.disabled) {\n            return;\n        }\n        const $slider = $(this).parent();\n        $slider.addClass('mdui-slider-focus');\n    });\n    // 结束触摸滑块事件\n    $document.on(endEvent, rangeSelector, function (event) {\n        if (!isAllow(event)) {\n            return;\n        }\n        if (this.disabled) {\n            return;\n        }\n        const $slider = $(this).parent();\n        $slider.removeClass('mdui-slider-focus');\n    });\n    $document.on(unlockEvent, rangeSelector, register);\n    /**\n     * 初始化滑块\n     */\n    mdui.mutation('.mdui-slider', function () {\n        reInit($(this));\n    });\n});\nmdui.updateSliders = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-slider') : $(selector);\n    $elements.each((_, element) => {\n        reInit($(element));\n    });\n};\n\nconst DEFAULT_OPTIONS$2 = {\n    trigger: 'hover',\n};\nclass Fab {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$2);\n        /**\n         * 当前 fab 的状态\n         */\n        this.state = 'closed';\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.$btn = this.$element.find('.mdui-fab');\n        this.$dial = this.$element.find('.mdui-fab-dial');\n        this.$dialBtns = this.$dial.find('.mdui-fab');\n        if (this.options.trigger === 'hover') {\n            this.$btn.on('touchstart mouseenter', () => this.open());\n            this.$element.on('mouseleave', () => this.close());\n        }\n        if (this.options.trigger === 'click') {\n            this.$btn.on(startEvent, () => this.open());\n        }\n        // 触摸屏幕其他地方关闭快速拨号\n        $document.on(startEvent, (event) => {\n            if ($(event.target).parents('.mdui-fab-wrapper').length) {\n                return;\n            }\n            this.close();\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'fab', this.$element, this);\n    }\n    /**\n     * 当前是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开快速拨号菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 为菜单中的按钮添加不同的 transition-delay\n        this.$dialBtns.each((index, btn) => {\n            const delay = `${15 * (this.$dialBtns.length - index)}ms`;\n            btn.style.transitionDelay = delay;\n            btn.style.webkitTransitionDelay = delay;\n        });\n        this.$dial.css('height', 'auto').addClass('mdui-fab-dial-show');\n        // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n        if (this.$btn.find('.mdui-fab-opened').length) {\n            this.$btn.addClass('mdui-fab-opened');\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n        this.$dialBtns.first().transitionEnd(() => {\n            if (this.$btn.hasClass('mdui-fab-opened')) {\n                this.state = 'opened';\n                this.triggerEvent('opened');\n            }\n        });\n    }\n    /**\n     * 关闭快速拨号菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        // 为菜单中的按钮添加不同的 transition-delay\n        this.$dialBtns.each((index, btn) => {\n            const delay = `${15 * index}ms`;\n            btn.style.transitionDelay = delay;\n            btn.style.webkitTransitionDelay = delay;\n        });\n        this.$dial.removeClass('mdui-fab-dial-show');\n        this.$btn.removeClass('mdui-fab-opened');\n        this.state = 'closing';\n        this.triggerEvent('close');\n        // 从上往下依次关闭，最后一个关闭后才表示动画完成\n        this.$dialBtns.last().transitionEnd(() => {\n            if (this.$btn.hasClass('mdui-fab-opened')) {\n                return;\n            }\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$dial.css('height', 0);\n        });\n    }\n    /**\n     * 切换快速拨号菜单的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 以动画的形式显示整个浮动操作按钮\n     */\n    show() {\n        this.$element.removeClass('mdui-fab-hide');\n    }\n    /**\n     * 以动画的形式隐藏整个浮动操作按钮\n     */\n    hide() {\n        this.$element.addClass('mdui-fab-hide');\n    }\n    /**\n     * 返回当前快速拨号菜单的打开状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Fab = Fab;\n\nconst customAttr$3 = 'mdui-fab';\n$(() => {\n    // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n    // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n    $document.on('touchstart mousedown mouseover', `[${customAttr$3}]`, function () {\n        new mdui.Fab(this, parseOptions(this, customAttr$3));\n    });\n});\n\n/**\n * 最终生成的元素结构为：\n *  <select class=\"mdui-select\" mdui-select=\"{position: 'top'}\" style=\"display: none;\"> // $native\n *    <option value=\"1\">State 1</option>\n *    <option value=\"2\">State 2</option>\n *    <option value=\"3\" disabled=\"\">State 3</option>\n *  </select>\n *  <div class=\"mdui-select mdui-select-position-top\" style=\"\" id=\"88dec0e4-d4a2-c6d0-0e7f-1ba4501e0553\"> // $element\n *    <span class=\"mdui-select-selected\">State 1</span> // $selected\n *    <div class=\"mdui-select-menu\" style=\"transform-origin: center 100% 0px;\"> // $menu\n *      <div class=\"mdui-select-menu-item mdui-ripple\" selected=\"\">State 1</div> // $items\n *      <div class=\"mdui-select-menu-item mdui-ripple\">State 2</div>\n *      <div class=\"mdui-select-menu-item mdui-ripple\" disabled=\"\">State 3</div>\n *    </div>\n *  </div>\n */\nconst DEFAULT_OPTIONS$3 = {\n    position: 'auto',\n    gutter: 16,\n};\nclass Select {\n    constructor(selector, options = {}) {\n        /**\n         * 生成的 `<div class=\"mdui-select\">` 元素的 JQ 对象\n         */\n        this.$element = $();\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$3);\n        /**\n         * select 的 size 属性的值，根据该值设置 select 的高度\n         */\n        this.size = 0;\n        /**\n         * 占位元素，显示已选中菜单项的文本\n         */\n        this.$selected = $();\n        /**\n         * 菜单项的外层元素的 JQ 对象\n         */\n        this.$menu = $();\n        /**\n         * 菜单项数组的 JQ 对象\n         */\n        this.$items = $();\n        /**\n         * 当前选中的菜单项的索引号\n         */\n        this.selectedIndex = 0;\n        /**\n         * 当前选中菜单项的文本\n         */\n        this.selectedText = '';\n        /**\n         * 当前选中菜单项的值\n         */\n        this.selectedValue = '';\n        /**\n         * 当前 select 的状态\n         */\n        this.state = 'closed';\n        this.$native = $(selector).first();\n        this.$native.hide();\n        extend(this.options, options);\n        // 为当前 select 生成唯一 ID\n        this.uniqueID = $.guid();\n        // 生成 select\n        this.handleUpdate();\n        // 点击 select 外面区域关闭\n        $document.on('click touchstart', (event) => {\n            const $target = $(event.target);\n            if (this.isOpen() &&\n                !$target.is(this.$element) &&\n                !contains(this.$element[0], $target[0])) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * 调整菜单位置\n     */\n    readjustMenu() {\n        const windowHeight = $window.height();\n        // mdui-select 高度\n        const elementHeight = this.$element.height();\n        // 菜单项高度\n        const $itemFirst = this.$items.first();\n        const itemHeight = $itemFirst.height();\n        const itemMargin = parseInt($itemFirst.css('margin-top'));\n        // 菜单高度\n        const menuWidth = this.$element.innerWidth() + 0.01; // 必须比真实宽度多一点，不然会出现省略号\n        let menuHeight = itemHeight * this.size + itemMargin * 2;\n        // mdui-select 在窗口中的位置\n        const elementTop = this.$element[0].getBoundingClientRect().top;\n        let transformOriginY;\n        let menuMarginTop;\n        if (this.options.position === 'bottom') {\n            menuMarginTop = elementHeight;\n            transformOriginY = '0px';\n        }\n        else if (this.options.position === 'top') {\n            menuMarginTop = -menuHeight - 1;\n            transformOriginY = '100%';\n        }\n        else {\n            // 菜单高度不能超过窗口高度\n            const menuMaxHeight = windowHeight - this.options.gutter * 2;\n            if (menuHeight > menuMaxHeight) {\n                menuHeight = menuMaxHeight;\n            }\n            // 菜单的 margin-top\n            menuMarginTop = -(itemMargin +\n                this.selectedIndex * itemHeight +\n                (itemHeight - elementHeight) / 2);\n            const menuMaxMarginTop = -(itemMargin +\n                (this.size - 1) * itemHeight +\n                (itemHeight - elementHeight) / 2);\n            if (menuMarginTop < menuMaxMarginTop) {\n                menuMarginTop = menuMaxMarginTop;\n            }\n            // 菜单不能超出窗口\n            const menuTop = elementTop + menuMarginTop;\n            if (menuTop < this.options.gutter) {\n                // 不能超出窗口上方\n                menuMarginTop = -(elementTop - this.options.gutter);\n            }\n            else if (menuTop + menuHeight + this.options.gutter > windowHeight) {\n                // 不能超出窗口下方\n                menuMarginTop = -(elementTop +\n                    menuHeight +\n                    this.options.gutter -\n                    windowHeight);\n            }\n            // transform 的 Y 轴坐标\n            transformOriginY = `${this.selectedIndex * itemHeight + itemHeight / 2 + itemMargin}px`;\n        }\n        // 设置样式\n        this.$element.innerWidth(menuWidth);\n        this.$menu\n            .innerWidth(menuWidth)\n            .height(menuHeight)\n            .css({\n            'margin-top': menuMarginTop + 'px',\n            'transform-origin': 'center ' + transformOriginY + ' 0',\n        });\n    }\n    /**\n     * select 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 对原生 select 组件进行了修改后，需要调用该方法\n     */\n    handleUpdate() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        this.selectedValue = this.$native.val();\n        const itemsData = [];\n        this.$items = $();\n        // 生成 HTML\n        this.$native.find('option').each((index, option) => {\n            const text = option.textContent || '';\n            const value = option.value;\n            const disabled = option.disabled;\n            const selected = this.selectedValue === value;\n            itemsData.push({\n                value,\n                text,\n                disabled,\n                selected,\n                index,\n            });\n            if (selected) {\n                this.selectedText = text;\n                this.selectedIndex = index;\n            }\n            this.$items = this.$items.add('<div class=\"mdui-select-menu-item mdui-ripple\"' +\n                (disabled ? ' disabled' : '') +\n                (selected ? ' selected' : '') +\n                `>${text}</div>`);\n        });\n        this.$selected = $(`<span class=\"mdui-select-selected\">${this.selectedText}</span>`);\n        this.$element = $(`<div class=\"mdui-select mdui-select-position-${this.options.position}\" ` +\n            `style=\"${this.$native.attr('style')}\" ` +\n            `id=\"${this.uniqueID}\"></div>`)\n            .show()\n            .append(this.$selected);\n        this.$menu = $('<div class=\"mdui-select-menu\"></div>')\n            .appendTo(this.$element)\n            .append(this.$items);\n        $(`#${this.uniqueID}`).remove();\n        this.$native.after(this.$element);\n        // 根据 select 的 size 属性设置高度\n        this.size = parseInt(this.$native.attr('size') || '0');\n        if (this.size <= 0) {\n            this.size = this.$items.length;\n            if (this.size > 8) {\n                this.size = 8;\n            }\n        }\n        // 点击选项时关闭下拉菜单\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.$items.on('click', function () {\n            if (that.state === 'closing') {\n                return;\n            }\n            const $item = $(this);\n            const index = $item.index();\n            const data = itemsData[index];\n            if (data.disabled) {\n                return;\n            }\n            that.$selected.text(data.text);\n            that.$native.val(data.value);\n            that.$items.removeAttr('selected');\n            $item.attr('selected', '');\n            that.selectedIndex = data.index;\n            that.selectedValue = data.value;\n            that.selectedText = data.text;\n            that.$native.trigger('change');\n            that.close();\n        });\n        // 点击 $element 时打开下拉菜单\n        this.$element.on('click', (event) => {\n            const $target = $(event.target);\n            // 在菜单上点击时不打开\n            if ($target.is('.mdui-select-menu') ||\n                $target.is('.mdui-select-menu-item')) {\n                return;\n            }\n            this.toggle();\n        });\n    }\n    /**\n     * 动画结束的回调\n     */\n    transitionEnd() {\n        this.$element.removeClass('mdui-select-closing');\n        if (this.state === 'opening') {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n            this.$menu.css('overflow-y', 'auto');\n        }\n        if (this.state === 'closing') {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            // 恢复样式\n            this.$element.innerWidth('');\n            this.$menu.css({\n                'margin-top': '',\n                height: '',\n                width: '',\n            });\n        }\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'select', this.$native, this);\n    }\n    /**\n     * 切换下拉菜单的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 打开下拉菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.readjustMenu();\n        this.$element.addClass('mdui-select-open');\n        this.$menu.transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 关闭下拉菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        this.$menu.css('overflow-y', '');\n        this.$element\n            .removeClass('mdui-select-open')\n            .addClass('mdui-select-closing');\n        this.$menu.transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 获取当前菜单的状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Select = Select;\n\nconst customAttr$4 = 'mdui-select';\n$(() => {\n    mdui.mutation(`[${customAttr$4}]`, function () {\n        new mdui.Select(this, parseOptions(this, customAttr$4));\n    });\n});\n\n$(() => {\n    // 滚动时隐藏应用栏\n    mdui.mutation('.mdui-appbar-scroll-hide', function () {\n        new mdui.Headroom(this);\n    });\n    // 滚动时只隐藏应用栏中的工具栏\n    mdui.mutation('.mdui-appbar-scroll-toolbar-hide', function () {\n        new mdui.Headroom(this, {\n            pinnedClass: 'mdui-headroom-pinned-toolbar',\n            unpinnedClass: 'mdui-headroom-unpinned-toolbar',\n        });\n    });\n});\n\nconst DEFAULT_OPTIONS$4 = {\n    trigger: 'click',\n    loop: false,\n};\nclass Tab {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$4);\n        /**\n         * 当前激活的 tab 的索引号。为 -1 时表示没有激活的选项卡，或不存在选项卡\n         */\n        this.activeIndex = -1;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.$tabs = this.$element.children('a');\n        this.$indicator = $('<div class=\"mdui-tab-indicator\"></div>').appendTo(this.$element);\n        // 根据 url hash 获取默认激活的选项卡\n        const hash = window.location.hash;\n        if (hash) {\n            this.$tabs.each((index, tab) => {\n                if ($(tab).attr('href') === hash) {\n                    this.activeIndex = index;\n                    return false;\n                }\n                return true;\n            });\n        }\n        // 含 .mdui-tab-active 的元素默认激活\n        if (this.activeIndex === -1) {\n            this.$tabs.each((index, tab) => {\n                if ($(tab).hasClass('mdui-tab-active')) {\n                    this.activeIndex = index;\n                    return false;\n                }\n                return true;\n            });\n        }\n        // 存在选项卡时，默认激活第一个选项卡\n        if (this.$tabs.length && this.activeIndex === -1) {\n            this.activeIndex = 0;\n        }\n        // 设置激活状态选项卡\n        this.setActive();\n        // 监听窗口大小变化事件，调整指示器位置\n        $window.on('resize', $.throttle(() => this.setIndicatorPosition(), 100));\n        // 监听点击选项卡事件\n        this.$tabs.each((_, tab) => {\n            this.bindTabEvent(tab);\n        });\n    }\n    /**\n     * 指定选项卡是否已禁用\n     * @param $tab\n     */\n    isDisabled($tab) {\n        return $tab.attr('disabled') !== undefined;\n    }\n    /**\n     * 绑定在 Tab 上点击或悬浮的事件\n     * @param tab\n     */\n    bindTabEvent(tab) {\n        const $tab = $(tab);\n        // 点击或鼠标移入触发的事件\n        const clickEvent = () => {\n            // 禁用状态的选项卡无法选中\n            if (this.isDisabled($tab)) {\n                return false;\n            }\n            this.activeIndex = this.$tabs.index(tab);\n            this.setActive();\n        };\n        // 无论 trigger 是 click 还是 hover，都会响应 click 事件\n        $tab.on('click', clickEvent);\n        // trigger 为 hover 时，额外响应 mouseenter 事件\n        if (this.options.trigger === 'hover') {\n            $tab.on('mouseenter', clickEvent);\n        }\n        // 阻止链接的默认点击动作\n        $tab.on('click', () => {\n            if (($tab.attr('href') || '').indexOf('#') === 0) {\n                return false;\n            }\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     * @param $element\n     * @param parameters\n     */\n    triggerEvent(name, $element, parameters = {}) {\n        componentEvent(name, 'tab', $element, this, parameters);\n    }\n    /**\n     * 设置激活状态的选项卡\n     */\n    setActive() {\n        this.$tabs.each((index, tab) => {\n            const $tab = $(tab);\n            const targetId = $tab.attr('href') || '';\n            // 设置选项卡激活状态\n            if (index === this.activeIndex && !this.isDisabled($tab)) {\n                if (!$tab.hasClass('mdui-tab-active')) {\n                    this.triggerEvent('change', this.$element, {\n                        index: this.activeIndex,\n                        id: targetId.substr(1),\n                    });\n                    this.triggerEvent('show', $tab);\n                    $tab.addClass('mdui-tab-active');\n                }\n                $(targetId).show();\n                this.setIndicatorPosition();\n            }\n            else {\n                $tab.removeClass('mdui-tab-active');\n                $(targetId).hide();\n            }\n        });\n    }\n    /**\n     * 设置选项卡指示器的位置\n     */\n    setIndicatorPosition() {\n        // 选项卡数量为 0 时，不显示指示器\n        if (this.activeIndex === -1) {\n            this.$indicator.css({\n                left: 0,\n                width: 0,\n            });\n            return;\n        }\n        const $activeTab = this.$tabs.eq(this.activeIndex);\n        if (this.isDisabled($activeTab)) {\n            return;\n        }\n        const activeTabOffset = $activeTab.offset();\n        this.$indicator.css({\n            left: `${activeTabOffset.left +\n                this.$element[0].scrollLeft -\n                this.$element[0].getBoundingClientRect().left}px`,\n            width: `${$activeTab.innerWidth()}px`,\n        });\n    }\n    /**\n     * 切换到下一个选项卡\n     */\n    next() {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (this.$tabs.length > this.activeIndex + 1) {\n            this.activeIndex++;\n        }\n        else if (this.options.loop) {\n            this.activeIndex = 0;\n        }\n        this.setActive();\n    }\n    /**\n     * 切换到上一个选项卡\n     */\n    prev() {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (this.activeIndex > 0) {\n            this.activeIndex--;\n        }\n        else if (this.options.loop) {\n            this.activeIndex = this.$tabs.length - 1;\n        }\n        this.setActive();\n    }\n    /**\n     * 显示指定索引号、或指定id的选项卡\n     * @param index 索引号、或id\n     */\n    show(index) {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (isNumber(index)) {\n            this.activeIndex = index;\n        }\n        else {\n            this.$tabs.each((i, tab) => {\n                if (tab.id === index) {\n                    this.activeIndex = i;\n                    return false;\n                }\n            });\n        }\n        this.setActive();\n    }\n    /**\n     * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n     * 在添加或删除选项卡时，需要调用该方法\n     */\n    handleUpdate() {\n        const $oldTabs = this.$tabs; // 旧的 tabs JQ对象\n        const $newTabs = this.$element.children('a'); // 新的 tabs JQ对象\n        const oldTabsElement = $oldTabs.get(); // 旧的 tabs 元素数组\n        const newTabsElement = $newTabs.get(); // 新的 tabs 元素数组\n        if (!$newTabs.length) {\n            this.activeIndex = -1;\n            this.$tabs = $newTabs;\n            this.setIndicatorPosition();\n            return;\n        }\n        // 重新遍历选项卡，找出新增的选项卡\n        $newTabs.each((index, tab) => {\n            // 有新增的选项卡\n            if (oldTabsElement.indexOf(tab) < 0) {\n                this.bindTabEvent(tab);\n                if (this.activeIndex === -1) {\n                    this.activeIndex = 0;\n                }\n                else if (index <= this.activeIndex) {\n                    this.activeIndex++;\n                }\n            }\n        });\n        // 找出被移除的选项卡\n        $oldTabs.each((index, tab) => {\n            // 有被移除的选项卡\n            if (newTabsElement.indexOf(tab) < 0) {\n                if (index < this.activeIndex) {\n                    this.activeIndex--;\n                }\n                else if (index === this.activeIndex) {\n                    this.activeIndex = 0;\n                }\n            }\n        });\n        this.$tabs = $newTabs;\n        this.setActive();\n    }\n}\nmdui.Tab = Tab;\n\nconst customAttr$5 = 'mdui-tab';\n$(() => {\n    mdui.mutation(`[${customAttr$5}]`, function () {\n        new mdui.Tab(this, parseOptions(this, customAttr$5));\n    });\n});\n\n/**\n * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n */\nconst DEFAULT_OPTIONS$5 = {\n    overlay: false,\n    swipe: false,\n};\nclass Drawer {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$5);\n        /**\n         * 当前是否显示着遮罩层\n         */\n        this.overlay = false;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.position = this.$element.hasClass('mdui-drawer-right')\n            ? 'right'\n            : 'left';\n        if (this.$element.hasClass('mdui-drawer-close')) {\n            this.state = 'closed';\n        }\n        else if (this.$element.hasClass('mdui-drawer-open')) {\n            this.state = 'opened';\n        }\n        else if (this.isDesktop()) {\n            this.state = 'opened';\n        }\n        else {\n            this.state = 'closed';\n        }\n        // 浏览器窗口大小调整时\n        $window.on('resize', $.throttle(() => {\n            if (this.isDesktop()) {\n                // 由手机平板切换到桌面时\n                // 如果显示着遮罩，则隐藏遮罩\n                if (this.overlay && !this.options.overlay) {\n                    $.hideOverlay();\n                    this.overlay = false;\n                    $.unlockScreen();\n                }\n                // 没有强制关闭，则状态为打开状态\n                if (!this.$element.hasClass('mdui-drawer-close')) {\n                    this.state = 'opened';\n                }\n            }\n            else if (!this.overlay && this.state === 'opened') {\n                // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n                if (this.$element.hasClass('mdui-drawer-open')) {\n                    $.showOverlay();\n                    this.overlay = true;\n                    $.lockScreen();\n                    $('.mdui-overlay').one('click', () => this.close());\n                }\n                else {\n                    this.state = 'closed';\n                }\n            }\n        }, 100));\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-drawer-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n        this.swipeSupport();\n    }\n    /**\n     * 是否是桌面设备\n     */\n    isDesktop() {\n        return $window.width() >= 1024;\n    }\n    /**\n     * 滑动手势支持\n     */\n    swipeSupport() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 抽屉栏滑动手势控制\n        let openNavEventHandler;\n        let touchStartX;\n        let touchStartY;\n        let swipeStartX;\n        let swiping = null;\n        let maybeSwiping = false;\n        const $body = $('body');\n        // 手势触发的范围\n        const swipeAreaWidth = 24;\n        function setPosition(translateX) {\n            const rtlTranslateMultiplier = that.position === 'right' ? -1 : 1;\n            const transformCSS = `translate(${-1 * rtlTranslateMultiplier * translateX}px, 0) !important;`;\n            const transitionCSS = 'initial !important;';\n            that.$element.css('cssText', `transform: ${transformCSS}; transition: ${transitionCSS};`);\n        }\n        function cleanPosition() {\n            that.$element[0].style.transform = '';\n            that.$element[0].style.webkitTransform = '';\n            that.$element[0].style.transition = '';\n            that.$element[0].style.webkitTransition = '';\n        }\n        function getMaxTranslateX() {\n            return that.$element.width() + 10;\n        }\n        function getTranslateX(currentX) {\n            return Math.min(Math.max(swiping === 'closing'\n                ? swipeStartX - currentX\n                : getMaxTranslateX() + swipeStartX - currentX, 0), getMaxTranslateX());\n        }\n        function onBodyTouchEnd(event) {\n            if (swiping) {\n                let touchX = event.changedTouches[0].pageX;\n                if (that.position === 'right') {\n                    touchX = $body.width() - touchX;\n                }\n                const translateRatio = getTranslateX(touchX) / getMaxTranslateX();\n                maybeSwiping = false;\n                const swipingState = swiping;\n                swiping = null;\n                if (swipingState === 'opening') {\n                    if (translateRatio < 0.92) {\n                        cleanPosition();\n                        that.open();\n                    }\n                    else {\n                        cleanPosition();\n                    }\n                }\n                else {\n                    if (translateRatio > 0.08) {\n                        cleanPosition();\n                        that.close();\n                    }\n                    else {\n                        cleanPosition();\n                    }\n                }\n                $.unlockScreen();\n            }\n            else {\n                maybeSwiping = false;\n            }\n            $body.off({\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                touchmove: onBodyTouchMove,\n                touchend: onBodyTouchEnd,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                touchcancel: onBodyTouchMove,\n            });\n        }\n        function onBodyTouchMove(event) {\n            let touchX = event.touches[0].pageX;\n            if (that.position === 'right') {\n                touchX = $body.width() - touchX;\n            }\n            const touchY = event.touches[0].pageY;\n            if (swiping) {\n                setPosition(getTranslateX(touchX));\n            }\n            else if (maybeSwiping) {\n                const dXAbs = Math.abs(touchX - touchStartX);\n                const dYAbs = Math.abs(touchY - touchStartY);\n                const threshold = 8;\n                if (dXAbs > threshold && dYAbs <= threshold) {\n                    swipeStartX = touchX;\n                    swiping = that.state === 'opened' ? 'closing' : 'opening';\n                    $.lockScreen();\n                    setPosition(getTranslateX(touchX));\n                }\n                else if (dXAbs <= threshold && dYAbs > threshold) {\n                    onBodyTouchEnd();\n                }\n            }\n        }\n        function onBodyTouchStart(event) {\n            touchStartX = event.touches[0].pageX;\n            if (that.position === 'right') {\n                touchStartX = $body.width() - touchStartX;\n            }\n            touchStartY = event.touches[0].pageY;\n            if (that.state !== 'opened') {\n                if (touchStartX > swipeAreaWidth ||\n                    openNavEventHandler !== onBodyTouchStart) {\n                    return;\n                }\n            }\n            maybeSwiping = true;\n            $body.on({\n                touchmove: onBodyTouchMove,\n                touchend: onBodyTouchEnd,\n                touchcancel: onBodyTouchMove,\n            });\n        }\n        function enableSwipeHandling() {\n            if (!openNavEventHandler) {\n                $body.on('touchstart', onBodyTouchStart);\n                openNavEventHandler = onBodyTouchStart;\n            }\n        }\n        if (this.options.swipe) {\n            enableSwipeHandling();\n        }\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'drawer', this.$element, this);\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-drawer-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n        }\n    }\n    /**\n     * 是否处于打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开抽屉栏\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        if (!this.options.overlay) {\n            $('body').addClass(`mdui-drawer-body-${this.position}`);\n        }\n        this.$element\n            .removeClass('mdui-drawer-close')\n            .addClass('mdui-drawer-open')\n            .transitionEnd(() => this.transitionEnd());\n        if (!this.isDesktop() || this.options.overlay) {\n            this.overlay = true;\n            $.showOverlay().one('click', () => this.close());\n            $.lockScreen();\n        }\n    }\n    /**\n     * 关闭抽屉栏\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        if (!this.options.overlay) {\n            $('body').removeClass(`mdui-drawer-body-${this.position}`);\n        }\n        this.$element\n            .addClass('mdui-drawer-close')\n            .removeClass('mdui-drawer-open')\n            .transitionEnd(() => this.transitionEnd());\n        if (this.overlay) {\n            $.hideOverlay();\n            this.overlay = false;\n            $.unlockScreen();\n        }\n    }\n    /**\n     * 切换抽屉栏打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 返回当前抽屉栏的状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Drawer = Drawer;\n\nconst customAttr$6 = 'mdui-drawer';\n$(() => {\n    mdui.mutation(`[${customAttr$6}]`, function () {\n        const $element = $(this);\n        const options = parseOptions(this, customAttr$6);\n        const selector = options.target;\n        // @ts-ignore\n        delete options.target;\n        const $drawer = $(selector).first();\n        const instance = new mdui.Drawer($drawer, options);\n        $element.on('click', () => instance.toggle());\n    });\n});\n\nconst container = {};\nfunction queue(name, func) {\n    if (isUndefined(container[name])) {\n        container[name] = [];\n    }\n    if (isUndefined(func)) {\n        return container[name];\n    }\n    container[name].push(func);\n}\n/**\n * 从队列中移除第一个函数，并执行该函数\n * @param name 队列满\n */\nfunction dequeue(name) {\n    if (isUndefined(container[name])) {\n        return;\n    }\n    if (!container[name].length) {\n        return;\n    }\n    const func = container[name].shift();\n    func();\n}\n\nconst DEFAULT_OPTIONS$6 = {\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    destroyOnClosed: false,\n};\n/**\n * 当前显示的对话框实例\n */\nlet currentInst = null;\n/**\n * 队列名\n */\nconst queueName = '_mdui_dialog';\n/**\n * 窗口是否已锁定\n */\nlet isLockScreen = false;\n/**\n * 遮罩层元素\n */\nlet $overlay;\nclass Dialog {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$6);\n        /**\n         * 当前 dialog 的状态\n         */\n        this.state = 'closed';\n        /**\n         * dialog 元素是否是动态添加的\n         */\n        this.append = false;\n        this.$element = $(selector).first();\n        // 如果对话框元素没有在当前文档中，则需要添加\n        if (!contains(document.body, this.$element[0])) {\n            this.append = true;\n            $('body').append(this.$element);\n        }\n        extend(this.options, options);\n        // 绑定取消按钮事件\n        this.$element.find('[mdui-dialog-cancel]').each((_, cancel) => {\n            $(cancel).on('click', () => {\n                this.triggerEvent('cancel');\n                if (this.options.closeOnCancel) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定确认按钮事件\n        this.$element.find('[mdui-dialog-confirm]').each((_, confirm) => {\n            $(confirm).on('click', () => {\n                this.triggerEvent('confirm');\n                if (this.options.closeOnConfirm) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-dialog-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'dialog', this.$element, this);\n    }\n    /**\n     * 窗口宽度变化，或对话框内容变化时，调整对话框位置和对话框内的滚动条\n     */\n    readjust() {\n        if (!currentInst) {\n            return;\n        }\n        const $element = currentInst.$element;\n        const $title = $element.children('.mdui-dialog-title');\n        const $content = $element.children('.mdui-dialog-content');\n        const $actions = $element.children('.mdui-dialog-actions');\n        // 调整 dialog 的 top 和 height 值\n        $element.height('');\n        $content.height('');\n        const elementHeight = $element.height();\n        $element.css({\n            top: `${($window.height() - elementHeight) / 2}px`,\n            height: `${elementHeight}px`,\n        });\n        // 调整 mdui-dialog-content 的高度\n        $content.innerHeight(elementHeight -\n            ($title.innerHeight() || 0) -\n            ($actions.innerHeight() || 0));\n    }\n    /**\n     * hashchange 事件触发时关闭对话框\n     */\n    hashchangeEvent() {\n        if (window.location.hash.substring(1).indexOf('mdui-dialog') < 0) {\n            currentInst.close(true);\n        }\n    }\n    /**\n     * 点击遮罩层关闭对话框\n     * @param event\n     */\n    overlayClick(event) {\n        if ($(event.target).hasClass('mdui-overlay') &&\n            currentInst) {\n            currentInst.close();\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-dialog-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$element.hide();\n            // 所有对话框都关闭，且当前没有打开的对话框时，解锁屏幕\n            if (!queue(queueName).length && !currentInst && isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n            $window.off('resize', $.throttle(this.readjust, 100));\n            if (this.options.destroyOnClosed) {\n                this.destroy();\n            }\n        }\n    }\n    /**\n     * 打开指定对话框\n     */\n    doOpen() {\n        currentInst = this;\n        if (!isLockScreen) {\n            $.lockScreen();\n            isLockScreen = true;\n        }\n        this.$element.show();\n        this.readjust();\n        $window.on('resize', $.throttle(this.readjust, 100));\n        // 打开消息框\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-dialog-open')\n            .transitionEnd(() => this.transitionEnd());\n        // 不存在遮罩层元素时，添加遮罩层\n        if (!$overlay) {\n            $overlay = $.showOverlay(5100);\n        }\n        // 点击遮罩层时是否关闭对话框\n        if (this.options.modal) {\n            $overlay.off('click', this.overlayClick);\n        }\n        else {\n            $overlay.on('click', this.overlayClick);\n        }\n        // 是否显示遮罩层，不显示时，把遮罩层背景透明\n        $overlay.css('opacity', this.options.overlay ? '' : 0);\n        if (this.options.history) {\n            // 如果 hash 中原来就有 mdui-dialog，先删除，避免后退历史纪录后仍然有 mdui-dialog 导致无法关闭\n            // 包括 mdui-dialog 和 &mdui-dialog 和 ?mdui-dialog\n            let hash = window.location.hash.substring(1);\n            if (hash.indexOf('mdui-dialog') > -1) {\n                hash = hash.replace(/[&?]?mdui-dialog/g, '');\n            }\n            // 后退按钮关闭对话框\n            if (hash) {\n                window.location.hash = `${hash}${hash.indexOf('?') > -1 ? '&' : '?'}mdui-dialog`;\n            }\n            else {\n                window.location.hash = 'mdui-dialog';\n            }\n            $window.on('hashchange', this.hashchangeEvent);\n        }\n    }\n    /**\n     * 当前对话框是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开对话框\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n        if ((currentInst &&\n            (currentInst.state === 'opening' || currentInst.state === 'opened')) ||\n            queue(queueName).length) {\n            queue(queueName, () => this.doOpen());\n            return;\n        }\n        this.doOpen();\n    }\n    /**\n     * 关闭对话框\n     */\n    close(historyBack = false) {\n        // historyBack 是否需要后退历史纪录，默认为 `false`。该参数仅内部使用\n        // 为 `false` 时是通过 js 关闭，需要后退一个历史记录\n        // 为 `true` 时是通过后退按钮关闭，不需要后退历史记录\n        // setTimeout 的作用是：\n        // 当同时关闭一个对话框，并打开另一个对话框时，使打开对话框的操作先执行，以使需要打开的对话框先加入队列\n        setTimeout(() => {\n            if (!this.isOpen()) {\n                return;\n            }\n            currentInst = null;\n            this.state = 'closing';\n            this.triggerEvent('close');\n            // 所有对话框都关闭，且当前没有打开的对话框时，隐藏遮罩\n            if (!queue(queueName).length && $overlay) {\n                $.hideOverlay();\n                $overlay = null;\n                // 若仍存在遮罩，恢复遮罩的 z-index\n                $('.mdui-overlay').css('z-index', 2000);\n            }\n            this.$element\n                .removeClass('mdui-dialog-open')\n                .transitionEnd(() => this.transitionEnd());\n            if (this.options.history && !queue(queueName).length) {\n                if (!historyBack) {\n                    window.history.back();\n                }\n                $window.off('hashchange', this.hashchangeEvent);\n            }\n            // 关闭旧对话框，打开新对话框。\n            // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n            setTimeout(() => {\n                dequeue(queueName);\n            }, 100);\n        });\n    }\n    /**\n     * 切换对话框打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取对话框状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * 销毁对话框\n     */\n    destroy() {\n        if (this.append) {\n            this.$element.remove();\n        }\n        if (!queue(queueName).length && !currentInst) {\n            if ($overlay) {\n                $.hideOverlay();\n                $overlay = null;\n            }\n            if (isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n        }\n    }\n    /**\n     * 对话框内容变化时，需要调用该方法来调整对话框位置和滚动条高度\n     */\n    handleUpdate() {\n        this.readjust();\n    }\n}\n\n// esc 按下时关闭对话框\n$document.on('keydown', (event) => {\n    if (currentInst &&\n        currentInst.options.closeOnEsc &&\n        currentInst.state === 'opened' &&\n        event.keyCode === 27) {\n        currentInst.close();\n    }\n});\nmdui.Dialog = Dialog;\n\nconst customAttr$7 = 'mdui-dialog';\nconst dataName$1 = '_mdui_dialog';\n$(() => {\n    $document.on('click', `[${customAttr$7}]`, function () {\n        const options = parseOptions(this, customAttr$7);\n        const selector = options.target;\n        // @ts-ignore\n        delete options.target;\n        const $dialog = $(selector).first();\n        let instance = $dialog.data(dataName$1);\n        if (!instance) {\n            instance = new mdui.Dialog($dialog, options);\n            $dialog.data(dataName$1, instance);\n        }\n        instance.open();\n    });\n});\n\nconst DEFAULT_BUTTON = {\n    text: '',\n    bold: false,\n    close: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n};\nconst DEFAULT_OPTIONS$7 = {\n    title: '',\n    content: '',\n    buttons: [],\n    stackedButtons: false,\n    cssClass: '',\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    destroyOnClosed: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\nmdui.dialog = function (options) {\n    var _a, _b;\n    // 合并配置参数\n    options = extend({}, DEFAULT_OPTIONS$7, options);\n    each(options.buttons, (i, button) => {\n        options.buttons[i] = extend({}, DEFAULT_BUTTON, button);\n    });\n    // 按钮的 HTML\n    let buttonsHTML = '';\n    if ((_a = options.buttons) === null || _a === void 0 ? void 0 : _a.length) {\n        buttonsHTML = `<div class=\"mdui-dialog-actions${options.stackedButtons ? ' mdui-dialog-actions-stacked' : ''}\">`;\n        each(options.buttons, (_, button) => {\n            buttonsHTML +=\n                '<a href=\"javascript:void(0)\" ' +\n                    `class=\"mdui-btn mdui-ripple mdui-text-color-primary ${button.bold ? 'mdui-btn-bold' : ''}\">${button.text}</a>`;\n        });\n        buttonsHTML += '</div>';\n    }\n    // Dialog 的 HTML\n    const HTML = `<div class=\"mdui-dialog ${options.cssClass}\">` +\n        (options.title\n            ? `<div class=\"mdui-dialog-title\">${options.title}</div>`\n            : '') +\n        (options.content\n            ? `<div class=\"mdui-dialog-content\">${options.content}</div>`\n            : '') +\n        buttonsHTML +\n        '</div>';\n    // 实例化 Dialog\n    const instance = new mdui.Dialog(HTML, {\n        history: options.history,\n        overlay: options.overlay,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        destroyOnClosed: options.destroyOnClosed,\n    });\n    // 绑定按钮事件\n    if ((_b = options.buttons) === null || _b === void 0 ? void 0 : _b.length) {\n        instance.$element\n            .find('.mdui-dialog-actions .mdui-btn')\n            .each((index, button) => {\n            $(button).on('click', () => {\n                options.buttons[index].onClick(instance);\n                if (options.buttons[index].close) {\n                    instance.close();\n                }\n            });\n        });\n    }\n    // 绑定打开关闭事件\n    instance.$element\n        .on('open.mdui.dialog', () => {\n        options.onOpen(instance);\n    })\n        .on('opened.mdui.dialog', () => {\n        options.onOpened(instance);\n    })\n        .on('close.mdui.dialog', () => {\n        options.onClose(instance);\n    })\n        .on('closed.mdui.dialog', () => {\n        options.onClosed(instance);\n    });\n    instance.open();\n    return instance;\n};\n\nconst DEFAULT_OPTIONS$8 = {\n    confirmText: 'ok',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnConfirm: true,\n};\nmdui.alert = function (text, title, onConfirm, options) {\n    if (isFunction(title)) {\n        options = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$8, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-alert',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n\nconst DEFAULT_OPTIONS$9 = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n};\nmdui.confirm = function (text, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$9, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancel,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-confirm',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n\nconst DEFAULT_OPTIONS$a = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    type: 'text',\n    maxlength: 0,\n    defaultValue: '',\n    confirmOnEnter: false,\n};\nmdui.prompt = function (label, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$a, options);\n    const content = '<div class=\"mdui-textfield\">' +\n        (label ? `<label class=\"mdui-textfield-label\">${label}</label>` : '') +\n        (options.type === 'text'\n            ? `<input class=\"mdui-textfield-input\" type=\"text\" value=\"${options.defaultValue}\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}/>`\n            : '') +\n        (options.type === 'textarea'\n            ? `<textarea class=\"mdui-textfield-input\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}>${options.defaultValue}</textarea>`\n            : '') +\n        '</div>';\n    const onCancelClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onCancel(value, dialog);\n    };\n    const onConfirmClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onConfirm(value, dialog);\n    };\n    return mdui.dialog({\n        title,\n        content,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancelClick,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirmClick,\n            },\n        ],\n        cssClass: 'mdui-dialog-prompt',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        onOpen: (dialog) => {\n            // 初始化输入框\n            const $input = dialog.$element.find('.mdui-textfield-input');\n            mdui.updateTextFields($input);\n            // 聚焦到输入框\n            $input[0].focus();\n            // 捕捉文本框回车键，在单行文本框的情况下触发回调\n            if (options.type !== 'textarea' && options.confirmOnEnter === true) {\n                $input.on('keydown', (event) => {\n                    if (event.keyCode === 13) {\n                        const value = dialog.$element.find('.mdui-textfield-input').val();\n                        onConfirm(value, dialog);\n                        if (options.closeOnConfirm) {\n                            dialog.close();\n                        }\n                        return false;\n                    }\n                    return;\n                });\n            }\n            // 如果是多行输入框，监听输入框的 input 事件，更新对话框高度\n            if (options.type === 'textarea') {\n                $input.on('input', () => dialog.handleUpdate());\n            }\n            // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新对话框高度\n            if (options.maxlength) {\n                dialog.handleUpdate();\n            }\n        },\n    });\n};\n\nconst DEFAULT_OPTIONS$b = {\n    position: 'auto',\n    delay: 0,\n    content: '',\n};\nclass Tooltip {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$b);\n        /**\n         * 当前 tooltip 的状态\n         */\n        this.state = 'closed';\n        /**\n         * setTimeout 的返回值\n         */\n        this.timeoutId = null;\n        this.$target = $(selector).first();\n        extend(this.options, options);\n        // 创建 Tooltip HTML\n        this.$element = $(`<div class=\"mdui-tooltip\" id=\"${$.guid()}\">${this.options.content}</div>`).appendTo(document.body);\n        // 绑定事件。元素处于 disabled 状态时无法触发鼠标事件，为了统一，把 touch 事件也禁用\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.$target\n            .on('touchstart mouseenter', function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            if (!isAllow(event)) {\n                return;\n            }\n            register(event);\n            that.open();\n        })\n            .on('touchend mouseleave', function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            if (!isAllow(event)) {\n                return;\n            }\n            that.close();\n        })\n            .on(unlockEvent, function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            register(event);\n        });\n    }\n    /**\n     * 元素是否已禁用\n     * @param element\n     */\n    isDisabled(element) {\n        return (element.disabled ||\n            $(element).attr('disabled') !== undefined);\n    }\n    /**\n     * 是否是桌面设备\n     */\n    isDesktop() {\n        return $window.width() > 1024;\n    }\n    /**\n     * 设置 Tooltip 的位置\n     */\n    setPosition() {\n        let marginLeft;\n        let marginTop;\n        // 触发的元素\n        const targetProps = this.$target[0].getBoundingClientRect();\n        // 触发的元素和 Tooltip 之间的距离\n        const targetMargin = this.isDesktop() ? 14 : 24;\n        // Tooltip 的宽度和高度\n        const tooltipWidth = this.$element[0].offsetWidth;\n        const tooltipHeight = this.$element[0].offsetHeight;\n        // Tooltip 的方向\n        let position = this.options.position;\n        // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n        if (position === 'auto') {\n            if (targetProps.top +\n                targetProps.height +\n                targetMargin +\n                tooltipHeight +\n                2 <\n                $window.height()) {\n                position = 'bottom';\n            }\n            else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n                position = 'top';\n            }\n            else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n                position = 'left';\n            }\n            else if (targetProps.width + targetMargin + tooltipWidth + 2 <\n                $window.width() - targetProps.left) {\n                position = 'right';\n            }\n            else {\n                position = 'bottom';\n            }\n        }\n        // 设置位置\n        switch (position) {\n            case 'bottom':\n                marginLeft = -1 * (tooltipWidth / 2);\n                marginTop = targetProps.height / 2 + targetMargin;\n                this.$element.transformOrigin('top center');\n                break;\n            case 'top':\n                marginLeft = -1 * (tooltipWidth / 2);\n                marginTop =\n                    -1 * (tooltipHeight + targetProps.height / 2 + targetMargin);\n                this.$element.transformOrigin('bottom center');\n                break;\n            case 'left':\n                marginLeft = -1 * (tooltipWidth + targetProps.width / 2 + targetMargin);\n                marginTop = -1 * (tooltipHeight / 2);\n                this.$element.transformOrigin('center right');\n                break;\n            case 'right':\n                marginLeft = targetProps.width / 2 + targetMargin;\n                marginTop = -1 * (tooltipHeight / 2);\n                this.$element.transformOrigin('center left');\n                break;\n        }\n        const targetOffset = this.$target.offset();\n        this.$element.css({\n            top: `${targetOffset.top + targetProps.height / 2}px`,\n            left: `${targetOffset.left + targetProps.width / 2}px`,\n            'margin-left': `${marginLeft}px`,\n            'margin-top': `${marginTop}px`,\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'tooltip', this.$target, this);\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-tooltip-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n        }\n    }\n    /**\n     * 当前 tooltip 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 执行打开 tooltip\n     */\n    doOpen() {\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-tooltip-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 打开 Tooltip\n     * @param options 允许每次打开时设置不同的参数\n     */\n    open(options) {\n        if (this.isOpen()) {\n            return;\n        }\n        const oldOptions = extend({}, this.options);\n        if (options) {\n            extend(this.options, options);\n        }\n        // tooltip 的内容有更新\n        if (oldOptions.content !== this.options.content) {\n            this.$element.html(this.options.content);\n        }\n        this.setPosition();\n        if (this.options.delay) {\n            this.timeoutId = setTimeout(() => this.doOpen(), this.options.delay);\n        }\n        else {\n            this.timeoutId = null;\n            this.doOpen();\n        }\n    }\n    /**\n     * 关闭 Tooltip\n     */\n    close() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        this.$element\n            .removeClass('mdui-tooltip-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 切换 Tooltip 的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取 Tooltip 状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Tooltip = Tooltip;\n\nconst customAttr$8 = 'mdui-tooltip';\nconst dataName$2 = '_mdui_tooltip';\n$(() => {\n    // mouseenter 不能冒泡，所以这里用 mouseover 代替\n    $document.on('touchstart mouseover', `[${customAttr$8}]`, function () {\n        const $target = $(this);\n        let instance = $target.data(dataName$2);\n        if (!instance) {\n            instance = new mdui.Tooltip(this, parseOptions(this, customAttr$8));\n            $target.data(dataName$2, instance);\n        }\n    });\n});\n\nconst DEFAULT_OPTIONS$c = {\n    message: '',\n    timeout: 4000,\n    position: 'bottom',\n    buttonText: '',\n    buttonColor: '',\n    closeOnButtonClick: true,\n    closeOnOutsideClick: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onButtonClick: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\n/**\n * 当前打开着的 Snackbar\n */\nlet currentInst$1 = null;\n/**\n * 队列名\n */\nconst queueName$1 = '_mdui_snackbar';\nclass Snackbar {\n    constructor(options) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$c);\n        /**\n         * 当前 Snackbar 的状态\n         */\n        this.state = 'closed';\n        /**\n         * setTimeout 的 ID\n         */\n        this.timeoutId = null;\n        extend(this.options, options);\n        // 按钮颜色\n        let buttonColorStyle = '';\n        let buttonColorClass = '';\n        if (this.options.buttonColor.indexOf('#') === 0 ||\n            this.options.buttonColor.indexOf('rgb') === 0) {\n            buttonColorStyle = `style=\"color:${this.options.buttonColor}\"`;\n        }\n        else if (this.options.buttonColor !== '') {\n            buttonColorClass = `mdui-text-color-${this.options.buttonColor}`;\n        }\n        // 添加 HTML\n        this.$element = $('<div class=\"mdui-snackbar\">' +\n            `<div class=\"mdui-snackbar-text\">${this.options.message}</div>` +\n            (this.options.buttonText\n                ? `<a href=\"javascript:void(0)\" class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ${buttonColorClass}\" ${buttonColorStyle}>${this.options.buttonText}</a>`\n                : '') +\n            '</div>').appendTo(document.body);\n        // 设置位置\n        this.setPosition('close');\n        this.$element.reflow().addClass(`mdui-snackbar-${this.options.position}`);\n    }\n    /**\n     * 点击 Snackbar 外面的区域关闭\n     * @param event\n     */\n    closeOnOutsideClick(event) {\n        const $target = $(event.target);\n        if (!$target.hasClass('mdui-snackbar') &&\n            !$target.parents('.mdui-snackbar').length) {\n            currentInst$1.close();\n        }\n    }\n    /**\n     * 设置 Snackbar 的位置\n     * @param state\n     */\n    setPosition(state) {\n        const snackbarHeight = this.$element[0].clientHeight;\n        const position = this.options.position;\n        let translateX;\n        let translateY;\n        // translateX\n        if (position === 'bottom' || position === 'top') {\n            translateX = '-50%';\n        }\n        else {\n            translateX = '0';\n        }\n        // translateY\n        if (state === 'open') {\n            translateY = '0';\n        }\n        else {\n            if (position === 'bottom') {\n                translateY = snackbarHeight;\n            }\n            if (position === 'top') {\n                translateY = -snackbarHeight;\n            }\n            if (position === 'left-top' || position === 'right-top') {\n                translateY = -snackbarHeight - 24;\n            }\n            if (position === 'left-bottom' || position === 'right-bottom') {\n                translateY = snackbarHeight + 24;\n            }\n        }\n        this.$element.transform(`translate(${translateX},${translateY}px`);\n    }\n    /**\n     * 打开 Snackbar\n     */\n    open() {\n        if (this.state === 'opening' || this.state === 'opened') {\n            return;\n        }\n        // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n        if (currentInst$1) {\n            queue(queueName$1, () => this.open());\n            return;\n        }\n        currentInst$1 = this;\n        // 开始打开\n        this.state = 'opening';\n        this.options.onOpen(this);\n        this.setPosition('open');\n        this.$element.transitionEnd(() => {\n            if (this.state !== 'opening') {\n                return;\n            }\n            this.state = 'opened';\n            this.options.onOpened(this);\n            // 有按钮时绑定事件\n            if (this.options.buttonText) {\n                this.$element.find('.mdui-snackbar-action').on('click', () => {\n                    this.options.onButtonClick(this);\n                    if (this.options.closeOnButtonClick) {\n                        this.close();\n                    }\n                });\n            }\n            // 点击 snackbar 的事件\n            this.$element.on('click', (event) => {\n                if (!$(event.target).hasClass('mdui-snackbar-action')) {\n                    this.options.onClick(this);\n                }\n            });\n            // 点击 Snackbar 外面的区域关闭\n            if (this.options.closeOnOutsideClick) {\n                $document.on(startEvent, this.closeOnOutsideClick);\n            }\n            // 超时后自动关闭\n            if (this.options.timeout) {\n                this.timeoutId = setTimeout(() => this.close(), this.options.timeout);\n            }\n        });\n    }\n    /**\n     * 关闭 Snackbar\n     */\n    close() {\n        if (this.state === 'closing' || this.state === 'closed') {\n            return;\n        }\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n        if (this.options.closeOnOutsideClick) {\n            $document.off(startEvent, this.closeOnOutsideClick);\n        }\n        this.state = 'closing';\n        this.options.onClose(this);\n        this.setPosition('close');\n        this.$element.transitionEnd(() => {\n            if (this.state !== 'closing') {\n                return;\n            }\n            currentInst$1 = null;\n            this.state = 'closed';\n            this.options.onClosed(this);\n            this.$element.remove();\n            dequeue(queueName$1);\n        });\n    }\n}\nmdui.snackbar = function (message, options = {}) {\n    if (isString(message)) {\n        options.message = message;\n    }\n    else {\n        options = message;\n    }\n    const instance = new Snackbar(options);\n    instance.open();\n    return instance;\n};\n\n$(() => {\n    // 切换导航项\n    $document.on('click', '.mdui-bottom-nav>a', function () {\n        const $item = $(this);\n        const $bottomNav = $item.parent();\n        $bottomNav.children('a').each((index, item) => {\n            const isThis = $item.is(item);\n            if (isThis) {\n                componentEvent('change', 'bottomNav', $bottomNav[0], undefined, {\n                    index,\n                });\n            }\n            isThis\n                ? $(item).addClass('mdui-bottom-nav-active')\n                : $(item).removeClass('mdui-bottom-nav-active');\n        });\n    });\n    // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n    mdui.mutation('.mdui-bottom-nav-scroll-hide', function () {\n        new mdui.Headroom(this, {\n            pinnedClass: 'mdui-headroom-pinned-down',\n            unpinnedClass: 'mdui-headroom-unpinned-down',\n        });\n    });\n});\n\n/**\n * layer 的 HTML 结构\n * @param index\n */\nfunction layerHTML(index = false) {\n    return (`<div class=\"mdui-spinner-layer ${index ? `mdui-spinner-layer-${index}` : ''}\">` +\n        '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '<div class=\"mdui-spinner-gap-patch\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '</div>');\n}\n/**\n * 填充 HTML\n * @param spinner\n */\nfunction fillHTML(spinner) {\n    const $spinner = $(spinner);\n    const layer = $spinner.hasClass('mdui-spinner-colorful')\n        ? layerHTML(1) + layerHTML(2) + layerHTML(3) + layerHTML(4)\n        : layerHTML();\n    $spinner.html(layer);\n}\n$(() => {\n    // 页面加载完后自动填充 HTML 结构\n    mdui.mutation('.mdui-spinner', function () {\n        fillHTML(this);\n    });\n});\nmdui.updateSpinners = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-spinner') : $(selector);\n    $elements.each(function () {\n        fillHTML(this);\n    });\n};\n\nconst DEFAULT_OPTIONS$d = {\n    position: 'auto',\n    align: 'auto',\n    gutter: 16,\n    fixed: false,\n    covered: 'auto',\n    subMenuTrigger: 'hover',\n    subMenuDelay: 200,\n};\nclass Menu {\n    constructor(anchorSelector, menuSelector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$d);\n        /**\n         * 当前菜单状态\n         */\n        this.state = 'closed';\n        this.$anchor = $(anchorSelector).first();\n        this.$element = $(menuSelector).first();\n        // 触发菜单的元素 和 菜单必须是同级的元素，否则菜单可能不能定位\n        if (!this.$anchor.parent().is(this.$element.parent())) {\n            throw new Error('anchorSelector and menuSelector must be siblings');\n        }\n        extend(this.options, options);\n        // 是否是级联菜单\n        this.isCascade = this.$element.hasClass('mdui-menu-cascade');\n        // covered 参数处理\n        this.isCovered =\n            this.options.covered === 'auto' ? !this.isCascade : this.options.covered;\n        // 点击触发菜单切换\n        this.$anchor.on('click', () => this.toggle());\n        // 点击菜单外面区域关闭菜单\n        $document.on('click touchstart', (event) => {\n            const $target = $(event.target);\n            if (this.isOpen() &&\n                !$target.is(this.$element) &&\n                !contains(this.$element[0], $target[0]) &&\n                !$target.is(this.$anchor) &&\n                !contains(this.$anchor[0], $target[0])) {\n                this.close();\n            }\n        });\n        // 点击不含子菜单的菜单条目关闭菜单\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        $document.on('click', '.mdui-menu-item', function () {\n            const $item = $(this);\n            if (!$item.find('.mdui-menu').length &&\n                $item.attr('disabled') === undefined) {\n                that.close();\n            }\n        });\n        // 绑定点击或鼠标移入含子菜单的条目的事件\n        this.bindSubMenuEvent();\n        // 窗口大小变化时，重新调整菜单位置\n        $window.on('resize', $.throttle(() => this.readjust(), 100));\n    }\n    /**\n     * 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'menu', this.$element, this);\n    }\n    /**\n     * 调整主菜单位置\n     */\n    readjust() {\n        let menuLeft;\n        let menuTop;\n        // 菜单位置和方向\n        let position;\n        let align;\n        // window 窗口的宽度和高度\n        const windowHeight = $window.height();\n        const windowWidth = $window.width();\n        // 配置参数\n        const gutter = this.options.gutter;\n        const isCovered = this.isCovered;\n        const isFixed = this.options.fixed;\n        // 动画方向参数\n        let transformOriginX;\n        let transformOriginY;\n        // 菜单的原始宽度和高度\n        const menuWidth = this.$element.width();\n        const menuHeight = this.$element.height();\n        // 触发菜单的元素在窗口中的位置\n        const anchorRect = this.$anchor[0].getBoundingClientRect();\n        const anchorTop = anchorRect.top;\n        const anchorLeft = anchorRect.left;\n        const anchorHeight = anchorRect.height;\n        const anchorWidth = anchorRect.width;\n        const anchorBottom = windowHeight - anchorTop - anchorHeight;\n        const anchorRight = windowWidth - anchorLeft - anchorWidth;\n        // 触发元素相对其拥有定位属性的父元素的位置\n        const anchorOffsetTop = this.$anchor[0].offsetTop;\n        const anchorOffsetLeft = this.$anchor[0].offsetLeft;\n        // 自动判断菜单位置\n        if (this.options.position === 'auto') {\n            if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n                // 判断下方是否放得下菜单\n                position = 'bottom';\n            }\n            else if (anchorTop + (isCovered ? anchorHeight : 0) >\n                menuHeight + gutter) {\n                // 判断上方是否放得下菜单\n                position = 'top';\n            }\n            else {\n                // 上下都放不下，居中显示\n                position = 'center';\n            }\n        }\n        else {\n            position = this.options.position;\n        }\n        // 自动判断菜单对齐方式\n        if (this.options.align === 'auto') {\n            if (anchorRight + anchorWidth > menuWidth + gutter) {\n                // 判断右侧是否放得下菜单\n                align = 'left';\n            }\n            else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n                // 判断左侧是否放得下菜单\n                align = 'right';\n            }\n            else {\n                // 左右都放不下，居中显示\n                align = 'center';\n            }\n        }\n        else {\n            align = this.options.align;\n        }\n        // 设置菜单位置\n        if (position === 'bottom') {\n            transformOriginY = '0';\n            menuTop =\n                (isCovered ? 0 : anchorHeight) +\n                    (isFixed ? anchorTop : anchorOffsetTop);\n        }\n        else if (position === 'top') {\n            transformOriginY = '100%';\n            menuTop =\n                (isCovered ? anchorHeight : 0) +\n                    (isFixed ? anchorTop - menuHeight : anchorOffsetTop - menuHeight);\n        }\n        else {\n            transformOriginY = '50%';\n            // =====================在窗口中居中\n            // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n            // 级联菜单内部不允许出现滚动条\n            let menuHeightTemp = menuHeight;\n            // 简单菜单比窗口高时，限制菜单高度\n            if (!this.isCascade) {\n                if (menuHeight + gutter * 2 > windowHeight) {\n                    menuHeightTemp = windowHeight - gutter * 2;\n                    this.$element.height(menuHeightTemp);\n                }\n            }\n            menuTop =\n                (windowHeight - menuHeightTemp) / 2 +\n                    (isFixed ? 0 : anchorOffsetTop - anchorTop);\n        }\n        this.$element.css('top', `${menuTop}px`);\n        // 设置菜单对齐方式\n        if (align === 'left') {\n            transformOriginX = '0';\n            menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n        }\n        else if (align === 'right') {\n            transformOriginX = '100%';\n            menuLeft = isFixed\n                ? anchorLeft + anchorWidth - menuWidth\n                : anchorOffsetLeft + anchorWidth - menuWidth;\n        }\n        else {\n            transformOriginX = '50%';\n            //=======================在窗口中居中\n            // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n            let menuWidthTemp = menuWidth;\n            // 菜单比窗口宽，限制菜单宽度\n            if (menuWidth + gutter * 2 > windowWidth) {\n                menuWidthTemp = windowWidth - gutter * 2;\n                this.$element.width(menuWidthTemp);\n            }\n            menuLeft =\n                (windowWidth - menuWidthTemp) / 2 +\n                    (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n        }\n        this.$element.css('left', `${menuLeft}px`);\n        // 设置菜单动画方向\n        this.$element.transformOrigin(`${transformOriginX} ${transformOriginY}`);\n    }\n    /**\n     * 调整子菜单的位置\n     * @param $submenu\n     */\n    readjustSubmenu($submenu) {\n        const $item = $submenu.parent('.mdui-menu-item');\n        let submenuTop;\n        let submenuLeft;\n        // 子菜单位置和方向\n        let position;\n        let align;\n        // window 窗口的宽度和高度\n        const windowHeight = $window.height();\n        const windowWidth = $window.width();\n        // 动画方向参数\n        let transformOriginX;\n        let transformOriginY;\n        // 子菜单的原始宽度和高度\n        const submenuWidth = $submenu.width();\n        const submenuHeight = $submenu.height();\n        // 触发子菜单的菜单项的宽度高度\n        const itemRect = $item[0].getBoundingClientRect();\n        const itemWidth = itemRect.width;\n        const itemHeight = itemRect.height;\n        const itemLeft = itemRect.left;\n        const itemTop = itemRect.top;\n        // 判断菜单上下位置\n        if (windowHeight - itemTop > submenuHeight) {\n            // 判断下方是否放得下菜单\n            position = 'bottom';\n        }\n        else if (itemTop + itemHeight > submenuHeight) {\n            // 判断上方是否放得下菜单\n            position = 'top';\n        }\n        else {\n            // 默认放在下方\n            position = 'bottom';\n        }\n        // 判断菜单左右位置\n        if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n            // 判断右侧是否放得下菜单\n            align = 'left';\n        }\n        else if (itemLeft > submenuWidth) {\n            // 判断左侧是否放得下菜单\n            align = 'right';\n        }\n        else {\n            // 默认放在右侧\n            align = 'left';\n        }\n        // 设置菜单位置\n        if (position === 'bottom') {\n            transformOriginY = '0';\n            submenuTop = '0';\n        }\n        else if (position === 'top') {\n            transformOriginY = '100%';\n            submenuTop = -submenuHeight + itemHeight;\n        }\n        $submenu.css('top', `${submenuTop}px`);\n        // 设置菜单对齐方式\n        if (align === 'left') {\n            transformOriginX = '0';\n            submenuLeft = itemWidth;\n        }\n        else if (align === 'right') {\n            transformOriginX = '100%';\n            submenuLeft = -submenuWidth;\n        }\n        $submenu.css('left', `${submenuLeft}px`);\n        // 设置菜单动画方向\n        $submenu.transformOrigin(`${transformOriginX} ${transformOriginY}`);\n    }\n    /**\n     * 打开子菜单\n     * @param $submenu\n     */\n    openSubMenu($submenu) {\n        this.readjustSubmenu($submenu);\n        $submenu\n            .addClass('mdui-menu-open')\n            .parent('.mdui-menu-item')\n            .addClass('mdui-menu-item-active');\n    }\n    /**\n     * 关闭子菜单，及其嵌套的子菜单\n     * @param $submenu\n     */\n    closeSubMenu($submenu) {\n        // 关闭子菜单\n        $submenu\n            .removeClass('mdui-menu-open')\n            .addClass('mdui-menu-closing')\n            .transitionEnd(() => $submenu.removeClass('mdui-menu-closing'))\n            // 移除激活状态的样式\n            .parent('.mdui-menu-item')\n            .removeClass('mdui-menu-item-active');\n        // 循环关闭嵌套的子菜单\n        $submenu.find('.mdui-menu').each((_, menu) => {\n            const $subSubmenu = $(menu);\n            $subSubmenu\n                .removeClass('mdui-menu-open')\n                .addClass('mdui-menu-closing')\n                .transitionEnd(() => $subSubmenu.removeClass('mdui-menu-closing'))\n                .parent('.mdui-menu-item')\n                .removeClass('mdui-menu-item-active');\n        });\n    }\n    /**\n     * 切换子菜单状态\n     * @param $submenu\n     */\n    toggleSubMenu($submenu) {\n        $submenu.hasClass('mdui-menu-open')\n            ? this.closeSubMenu($submenu)\n            : this.openSubMenu($submenu);\n    }\n    /**\n     * 绑定子菜单事件\n     */\n    bindSubMenuEvent() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 点击打开子菜单\n        this.$element.on('click', '.mdui-menu-item', function (event) {\n            const $item = $(this);\n            const $target = $(event.target);\n            // 禁用状态菜单不操作\n            if ($item.attr('disabled') !== undefined) {\n                return;\n            }\n            // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n            if ($target.is('.mdui-menu') || $target.is('.mdui-divider')) {\n                return;\n            }\n            // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n            if (!$target.parents('.mdui-menu-item').first().is($item)) {\n                return;\n            }\n            // 当前菜单的子菜单\n            const $submenu = $item.children('.mdui-menu');\n            // 先关闭除当前子菜单外的所有同级子菜单\n            $item\n                .parent('.mdui-menu')\n                .children('.mdui-menu-item')\n                .each((_, item) => {\n                const $tmpSubmenu = $(item).children('.mdui-menu');\n                if ($tmpSubmenu.length &&\n                    (!$submenu.length || !$tmpSubmenu.is($submenu))) {\n                    that.closeSubMenu($tmpSubmenu);\n                }\n            });\n            // 切换当前子菜单\n            if ($submenu.length) {\n                that.toggleSubMenu($submenu);\n            }\n        });\n        if (this.options.subMenuTrigger === 'hover') {\n            // 临时存储 setTimeout 对象\n            let timeout = null;\n            let timeoutOpen = null;\n            this.$element.on('mouseover mouseout', '.mdui-menu-item', function (event) {\n                const $item = $(this);\n                const eventType = event.type;\n                const $relatedTarget = $(event.relatedTarget);\n                // 禁用状态的菜单不操作\n                if ($item.attr('disabled') !== undefined) {\n                    return;\n                }\n                // 用 mouseover 模拟 mouseenter\n                if (eventType === 'mouseover') {\n                    if (!$item.is($relatedTarget) &&\n                        contains($item[0], $relatedTarget[0])) {\n                        return;\n                    }\n                }\n                // 用 mouseout 模拟 mouseleave\n                else if (eventType === 'mouseout') {\n                    if ($item.is($relatedTarget) ||\n                        contains($item[0], $relatedTarget[0])) {\n                        return;\n                    }\n                }\n                // 当前菜单项下的子菜单，未必存在\n                const $submenu = $item.children('.mdui-menu');\n                // 鼠标移入菜单项时，显示菜单项下的子菜单\n                if (eventType === 'mouseover') {\n                    if ($submenu.length) {\n                        // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n                        const tmpClose = $submenu.data('timeoutClose.mdui.menu');\n                        if (tmpClose) {\n                            clearTimeout(tmpClose);\n                        }\n                        // 如果当前子菜单已经打开，不操作\n                        if ($submenu.hasClass('mdui-menu-open')) {\n                            return;\n                        }\n                        // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n                        clearTimeout(timeoutOpen);\n                        // 准备打开当前子菜单\n                        timeout = timeoutOpen = setTimeout(() => that.openSubMenu($submenu), that.options.subMenuDelay);\n                        $submenu.data('timeoutOpen.mdui.menu', timeout);\n                    }\n                }\n                // 鼠标移出菜单项时，关闭菜单项下的子菜单\n                else if (eventType === 'mouseout') {\n                    if ($submenu.length) {\n                        // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n                        const tmpOpen = $submenu.data('timeoutOpen.mdui.menu');\n                        if (tmpOpen) {\n                            clearTimeout(tmpOpen);\n                        }\n                        // 准备关闭当前子菜单\n                        timeout = setTimeout(() => that.closeSubMenu($submenu), that.options.subMenuDelay);\n                        $submenu.data('timeoutClose.mdui.menu', timeout);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        this.$element.removeClass('mdui-menu-closing');\n        if (this.state === 'opening') {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        if (this.state === 'closing') {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            // 关闭后，恢复菜单样式到默认状态，并恢复 fixed 定位\n            this.$element.css({\n                top: '',\n                left: '',\n                width: '',\n                position: 'fixed',\n            });\n        }\n    }\n    /**\n     * 切换菜单状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 打开菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.readjust();\n        this.$element\n            // 菜单隐藏状态使用使用 fixed 定位。\n            .css('position', this.options.fixed ? 'fixed' : 'absolute')\n            .addClass('mdui-menu-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 关闭菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        // 菜单开始关闭时，关闭所有子菜单\n        this.$element.find('.mdui-menu').each((_, submenu) => {\n            this.closeSubMenu($(submenu));\n        });\n        this.$element\n            .removeClass('mdui-menu-open')\n            .addClass('mdui-menu-closing')\n            .transitionEnd(() => this.transitionEnd());\n    }\n}\nmdui.Menu = Menu;\n\nconst customAttr$9 = 'mdui-menu';\nconst dataName$3 = '_mdui_menu';\n$(() => {\n    $document.on('click', `[${customAttr$9}]`, function () {\n        const $this = $(this);\n        let instance = $this.data(dataName$3);\n        if (!instance) {\n            const options = parseOptions(this, customAttr$9);\n            const menuSelector = options.target;\n            // @ts-ignore\n            delete options.target;\n            instance = new mdui.Menu($this, menuSelector, options);\n            $this.data(dataName$3, instance);\n            instance.toggle();\n        }\n    });\n});\n\nexport default mdui;\n//# sourceMappingURL=mdui.esm.js.map\n","import { render } from \"./navLogin.vue?vue&type=template&id=142c1fd0\"\nimport script from \"./navLogin.vue?vue&type=script&lang=js\"\nexport * from \"./navLogin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\JS_学习\\\\Vue-Project\\\\home_nav\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./LoginView.vue?vue&type=template&id=13eb24f7&scoped=true\"\nimport script from \"./LoginView.vue?vue&type=script&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=13eb24f7&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\JS_学习\\\\Vue-Project\\\\home_nav\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-13eb24f7\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_createElementVNode","class","src","$options","logo","alt","style","color","title","_createVNode","_component_nav_login","_Fragment","_renderList","d","key","_hoisted_6","href","_hoisted_8","_hoisted_9","onSubmit","_hoisted_3","_hoisted_4","type","name","$data","password","$event","_hoisted_5","isFunction","target","isString","isNumber","isBoolean","isUndefined","isNull","isWindow","Window","isDocument","Document","isElement","Element","isNode","Node","isIE","window","document","documentMode","isArrayLike","length","isObjectLike","toElement","documentElement","toCamelCase","string","replace","_","letter","toUpperCase","toKebabCase","replacer","toLowerCase","getComputedStyleValue","element","getComputedStyle","getPropertyValue","isBorderBox","getExtraWidth","direction","extra","position","reduce","prev","index","prop","parseFloat","getStyle","valueNumber","getBoundingClientRect","getChildNodesArray","parent","tempParent","createElement","innerHTML","slice","call","childNodes","returnFalse","cssNumber","each","callback","i","keys","Object","JQ","constructor","arr","this","item","get$","$","selector","test","readyState","body","addEventListener","html","trim","toCreate","tags","li","tr","td","th","tbody","option","childTag","parentTag","indexOf","isIdSelector","match","querySelectorAll","getElementById","fn","prototype","setTimeout","addClass","mdui","contains","container","merge","first","second","value","push","get","undefined","find","foundElements","handlers","mduiElementId","getElementId","parse","parts","split","ns","sort","join","matcherFor","RegExp","getHandlers","func","event","filter","handler","add","types","data","elementId","useCapture","forEach","callFn","e","elem","result","apply","_detail","concat","preventDefault","stopPropagation","proxyFn","_ns","_data","reverse","proxy","remove","handlersInElement","removeEvent","removeEventListener","extend","object1","objectN","unshift","object","param","obj","Array","isArray","args","destructure","keyTmp","v","encodeURIComponent","trigger","extraParameters","eventObject","eventParams","bubbles","cancelable","isMouseEvent","MouseEvent","detail","CustomEvent","dispatchEvent","globalOptions","ajaxEvents","ajaxStart","ajaxSuccess","ajaxError","ajaxComplete","isQueryStringData","method","appendQuery","url","query","mergeOptions","options","defaults","processData","async","cache","username","headers","xhrFields","statusCode","dataType","contentType","timeout","global","callbacks","ajax","isCanceled","mergedOptions","location","toString","params","result1","result2","XHR","textStatus","Promise","resolve","reject","Date","now","xhr","XMLHttpRequest","open","setRequestHeader","crossDomain","$2","host","xhrTimeout","onload","clearTimeout","isHttpStatusSuccess","status","responseData","JSON","responseText","err","Error","responseType","response","onerror","statusText","onabort","abort","send","ArrayBuffer","Blob","FormData","ajaxSetup","dataNS","setObjectToElement","map","elements","ret","removeData","nameItem","unique","val","isPlainText","dir","$elements","nameIndex","node","is","shift","className","arguments","classes","getAttribute","cls","classList","setAttribute","$element","$target","parentNode","newItem","cloneNode","existingItem","nextSibling","insertBefore","targets","off","on","one","_this","origCallback","eventName","clone","isMatched","matches","msMatchesSelector","$compareWith","compare","removeChild","childLength","child","appendChild","contents","content","extraChilds","$result","set","removeAttribute","k","children","__","childNode","eq","$nodes","closest","matched","parents","rbrace","getData","dataAttr","nodeType","handleExtraWidth","funcIndex","includeMargin","multiply","getExtraWidthValue","clientProp","scrollProp","offsetProp","innerProp","doc","Math","max","elementIndex","computedValue","dimension","css","suffix","numerical","floatStyle","get$1","getClientRects","top","left","rect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","set$1","currentOffset","currentTopString","currentLeftString","currentTop","currentLeft","calculatePosition","currentPosition","resultData","attrs","attributes","empty","$selector","has","$targets","hasClass","funcName","margin","isSet","hide","display","props","propName","firstElement","outerHTML","selected","checked","last","not","$excludes","offsetParent","parentOffset","offset","$offsetParent","removeAttr","attributeName","names","removeProp","replaceWith","newContent","before","replaceAll","serializeArray","HTMLFormElement","nodeName","disabled","valueArr","serialize","elementDisplay","defaultDisplay","show","siblings","prevAll","nextAll","toggle","reflow","clientLeft","transition","duration","webkitTransitionDuration","transitionDuration","transitionEnd","that","events","fireCallback","transformOrigin","webkitTransformOrigin","transform","webkitTransform","entries","mutation","apiInit","selectors","$this","showOverlay","zIndex","$overlay","appendTo","level","hideOverlay","force","removeClass","lockScreen","$body","newBodyWidth","width","unlockScreen","throttle","delay","timer","GUID","componentEvent","componentName","instance","parameters","inst","fullEventName","jQuery","guid","s4","floor","random","substring","$document","$window","DEFAULT_OPTIONS","tolerance","initialClass","pinnedClass","unpinnedClass","Headroom","state","isEnable","lastScrollY","rafId","down","up","enable","onScroll","requestAnimationFrame","currentScrollY","scrolled","abs","toleranceExceeded","unpin","pin","triggerEvent","disable","cancelAnimationFrame","getState","parseOptions","attr","Function","customAttr","DEFAULT_OPTIONS$1","accordion","CollapseAbstract","classPrefix","getNamespace","classItem","classItemOpen","classHeader","classBody","bindEvent","$header","$item","$items","getItems","close","isOpen","getItem","$content","height","scrollHeight","openAll","closeAll","Collapse","customAttr$1","Panel","customAttr$2","Table","$thRow","$tdRows","$thCheckbox","$tdCheckboxs","selectable","selectedRow","init","updateThCheckbox","updateTdCheckbox","updateNumericCol","createCheckboxHTML","tag","updateThCheckboxStatus","checkbox","tdRowsLength","indeterminate","rowSelectedClass","row","$row","$checkbox","prependTo","isCheckedAll","numericClass","isNumericCol","$td","dataName","updateTables","startEvent","moveEvent","endEvent","cancelEvent","unlockEvent","touches","isAllow","register","$ripple","button","touchPosition","TouchEvent","touchStartX","pageX","touchStartY","pageY","innerHeight","innerWidth","center","x","y","diameter","pow","translate","removeRipple","$wave","removeTimer","wave","showRipple","hidden","hideRipple","touchMove","defaultData","reInit","domLoadedEvent","inputEvent","input","$input","eventType","inputType","$textfield","validity","valid","inputValue","hasExtraSpace","outerHeight","maxLength","text","updateValueStyle","$slider","$track","_slider_$track","$fill","_slider_$fill","$thumb","_slider_$thumb","_slider_$input","min","_slider_min","_slider_max","isDisabled","_slider_disabled","isDiscrete","_slider_discrete","$thumbText","_slider_$thumbText","percent","append","focus","updateTextFields","rangeSelector","updateSliders","DEFAULT_OPTIONS$2","Fab","$btn","$dial","$dialBtns","btn","transitionDelay","webkitTransitionDelay","customAttr$3","DEFAULT_OPTIONS$3","gutter","Select","size","$selected","$menu","selectedIndex","selectedText","selectedValue","$native","uniqueID","handleUpdate","readjustMenu","windowHeight","elementHeight","$itemFirst","itemHeight","itemMargin","parseInt","menuWidth","menuHeight","elementTop","transformOriginY","menuMarginTop","menuMaxHeight","menuMaxMarginTop","menuTop","itemsData","textContent","after","customAttr$4","DEFAULT_OPTIONS$4","loop","Tab","activeIndex","$tabs","$indicator","hash","tab","setActive","setIndicatorPosition","bindTabEvent","$tab","clickEvent","targetId","substr","$activeTab","activeTabOffset","scrollLeft","next","$oldTabs","$newTabs","oldTabsElement","newTabsElement","customAttr$5","DEFAULT_OPTIONS$5","overlay","swipe","Drawer","isDesktop","swipeSupport","openNavEventHandler","swipeStartX","swiping","maybeSwiping","swipeAreaWidth","setPosition","translateX","rtlTranslateMultiplier","transformCSS","transitionCSS","cleanPosition","webkitTransition","getMaxTranslateX","getTranslateX","currentX","onBodyTouchEnd","touchX","changedTouches","translateRatio","swipingState","touchmove","onBodyTouchMove","touchend","touchcancel","touchY","dXAbs","dYAbs","threshold","onBodyTouchStart","enableSwipeHandling","customAttr$6","$drawer","queue","dequeue","DEFAULT_OPTIONS$6","history","modal","closeOnEsc","closeOnCancel","closeOnConfirm","destroyOnClosed","currentInst","queueName","isLockScreen","Dialog","cancel","confirm","readjust","$title","$actions","hashchangeEvent","overlayClick","destroy","doOpen","historyBack","back","keyCode","customAttr$7","dataName$1","$dialog","DEFAULT_BUTTON","bold","onClick","DEFAULT_OPTIONS$7","buttons","stackedButtons","cssClass","onOpen","onOpened","onClose","onClosed","dialog","_a","_b","buttonsHTML","HTML","DEFAULT_OPTIONS$8","confirmText","alert","onConfirm","DEFAULT_OPTIONS$9","cancelText","onCancel","DEFAULT_OPTIONS$a","maxlength","defaultValue","confirmOnEnter","prompt","label","onCancelClick","onConfirmClick","DEFAULT_OPTIONS$b","Tooltip","timeoutId","marginLeft","marginTop","targetProps","targetMargin","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","targetOffset","oldOptions","customAttr$8","dataName$2","DEFAULT_OPTIONS$c","message","buttonText","buttonColor","closeOnButtonClick","closeOnOutsideClick","onButtonClick","currentInst$1","queueName$1","Snackbar","buttonColorStyle","buttonColorClass","snackbarHeight","clientHeight","translateY","layerHTML","fillHTML","spinner","$spinner","layer","snackbar","$bottomNav","isThis","updateSpinners","DEFAULT_OPTIONS$d","align","fixed","covered","subMenuTrigger","subMenuDelay","Menu","anchorSelector","menuSelector","$anchor","isCascade","isCovered","bindSubMenuEvent","menuLeft","windowWidth","isFixed","transformOriginX","anchorRect","anchorTop","anchorLeft","anchorHeight","anchorWidth","anchorBottom","anchorRight","anchorOffsetTop","offsetTop","anchorOffsetLeft","offsetLeft","menuHeightTemp","menuWidthTemp","readjustSubmenu","$submenu","submenuTop","submenuLeft","submenuWidth","submenuHeight","itemRect","itemWidth","itemLeft","itemTop","openSubMenu","closeSubMenu","menu","$subSubmenu","toggleSubMenu","$tmpSubmenu","timeoutOpen","$relatedTarget","relatedTarget","tmpClose","tmpOpen","submenu","customAttr$9","dataName$3","form","methods","submitForm","axios","then","res","code","localStorage","setItem","Token","$store","dispatch","catch","error","__exports__","components","navLogin","computed","wData","LoginConfig","render"],"sourceRoot":""}